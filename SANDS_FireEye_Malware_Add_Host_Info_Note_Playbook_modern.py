"""
This playbook just adds the information from the Host Artifact into a note so that this can be sent back to notable eent later.
"""


import phantom.rules as phantom
import json
from datetime import datetime, timedelta


@phantom.playbook_block()
def on_start(container):
    phantom.debug('on_start() called')

    # call 'fl_host_artifact' block
    fl_host_artifact(container=container)

    return

@phantom.playbook_block()
def api_add_note_host_details(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):
    phantom.debug("api_add_note_host_details() called")

    fb_unpack_the_text_list = phantom.get_format_data(name="fb_unpack_the_text_list")

    ################################################################################
    ## Custom Code Start
    ################################################################################

    # Write your custom code here...

    ################################################################################
    ## Custom Code End
    ################################################################################

    phantom.add_note(container=container, content=fb_unpack_the_text_list, note_format="html", title="Host Details")

    return


@phantom.playbook_block()
def fl_host_artifact(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):
    phantom.debug("fl_host_artifact() called")

    # collect filtered artifact ids and results for 'if' condition 1
    matched_artifacts_1, matched_results_1 = phantom.condition(
        container=container,
        conditions=[
            ["artifact:*.name", "==", "Host Artifact"]
        ],
        name="fl_host_artifact:condition_1",
        delimiter=None)

    # call connected blocks if filtered artifacts or results
    if matched_artifacts_1 or matched_results_1:
        cf_mbs_notable_events_text_1(action=action, success=success, container=container, results=results, handle=handle, filtered_artifacts=matched_artifacts_1, filtered_results=matched_results_1)

    return


@phantom.playbook_block()
def fb_unpack_the_text_list(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):
    phantom.debug("fb_unpack_the_text_list() called")

    template = """{0}"""

    # parameter list for template variable replacement
    parameters = [
        "cf_mbs_notable_events_text_1:custom_function_result.data.exclude_field_text"
    ]

    ################################################################################
    ## Custom Code Start
    ################################################################################

    # Write your custom code here...

    ################################################################################
    ## Custom Code End
    ################################################################################

    phantom.format(container=container, template=template, parameters=parameters, name="fb_unpack_the_text_list", separator=", ")

    api_add_note_host_details(container=container)

    return


@phantom.playbook_block()
def cf_mbs_notable_events_text_1(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):
    phantom.debug("cf_mbs_notable_events_text_1() called")

    filtered_artifact_0_data_fl_host_artifact = phantom.collect2(container=container, datapath=["filtered-data:fl_host_artifact:condition_1:artifact:*.cef","filtered-data:fl_host_artifact:condition_1:artifact:*.id"])

    filtered_artifact_0__cef = [item[0] for item in filtered_artifact_0_data_fl_host_artifact]

    parameters = []

    parameters.append({
        "artifact_cef_list": filtered_artifact_0__cef,
        "exclude_field_list": None,
    })

    ################################################################################
    ## Custom Code Start
    ################################################################################
    # Write your custom code here...
    ################################################################################
    ## Custom Code End
    ################################################################################

    phantom.custom_function(custom_function="mbs/notable_events_text", parameters=parameters, name="cf_mbs_notable_events_text_1", callback=fb_unpack_the_text_list)

    return


@phantom.playbook_block()
def on_finish(container, summary):
    phantom.debug("on_finish() called")

    ################################################################################
    ## Custom Code Start
    ################################################################################

    # Write your custom code here...

    ################################################################################
    ## Custom Code End
    ################################################################################

    return