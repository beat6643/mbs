{
    "blockly": false,
    "blockly_xml": "<xml></xml>",
    "category": "UC2",
    "coa": {
        "data": {
            "description": "This playbook finds the OS type of the end point device from the hostname (preference) or from the IP.",
            "edges": [
                {
                    "id": "port_0_to_port_6",
                    "sourceNode": "0",
                    "sourcePort": "0_out",
                    "targetNode": "6",
                    "targetPort": "6_in"
                },
                {
                    "id": "port_5_to_port_13",
                    "sourceNode": "5",
                    "sourcePort": "5_out",
                    "targetNode": "13",
                    "targetPort": "13_in"
                },
                {
                    "id": "port_14_to_port_1",
                    "sourceNode": "14",
                    "sourcePort": "14_out",
                    "targetNode": "1",
                    "targetPort": "1_in"
                },
                {
                    "conditions": [
                        {
                            "index": 1
                        }
                    ],
                    "id": "port_6_to_port_14",
                    "sourceNode": "6",
                    "sourcePort": "6_out",
                    "targetNode": "14",
                    "targetPort": "14_in"
                },
                {
                    "id": "port_15_to_port_5",
                    "sourceNode": "15",
                    "sourcePort": "15_out",
                    "targetNode": "5",
                    "targetPort": "5_in"
                },
                {
                    "conditions": [
                        {
                            "index": 1
                        }
                    ],
                    "id": "port_13_to_port_16",
                    "sourceNode": "13",
                    "sourcePort": "13_out",
                    "targetNode": "16",
                    "targetPort": "16_in"
                },
                {
                    "id": "port_16_to_port_2",
                    "sourceNode": "16",
                    "sourcePort": "16_out",
                    "targetNode": "2",
                    "targetPort": "2_in"
                },
                {
                    "id": "port_2_to_port_8",
                    "sourceNode": "2",
                    "sourcePort": "2_out",
                    "targetNode": "8",
                    "targetPort": "8_in"
                },
                {
                    "conditions": [
                        {
                            "index": 1
                        }
                    ],
                    "id": "port_8_to_port_9",
                    "sourceNode": "8",
                    "sourcePort": "8_out",
                    "targetNode": "9",
                    "targetPort": "9_in"
                },
                {
                    "conditions": [
                        {
                            "index": 0
                        }
                    ],
                    "id": "port_21_to_port_22",
                    "sourceNode": "21",
                    "sourcePort": "21_out",
                    "targetNode": "22",
                    "targetPort": "22_in"
                },
                {
                    "conditions": [
                        {
                            "index": 0
                        }
                    ],
                    "id": "port_22_to_port_11",
                    "sourceNode": "22",
                    "sourcePort": "22_out",
                    "targetNode": "11",
                    "targetPort": "11_in"
                },
                {
                    "conditions": [
                        {
                            "index": 1
                        }
                    ],
                    "id": "port_22_to_port_4",
                    "sourceNode": "22",
                    "sourcePort": "22_out",
                    "targetNode": "4",
                    "targetPort": "4_in"
                },
                {
                    "conditions": [
                        {
                            "index": 2
                        }
                    ],
                    "id": "port_22_to_port_10",
                    "sourceNode": "22",
                    "sourcePort": "22_out",
                    "targetNode": "10",
                    "targetPort": "10_in"
                },
                {
                    "id": "port_4_to_port_1",
                    "sourceNode": "4",
                    "sourcePort": "4_out",
                    "targetNode": "1",
                    "targetPort": "1_in"
                },
                {
                    "id": "port_11_to_port_1",
                    "sourceNode": "11",
                    "sourcePort": "11_out",
                    "targetNode": "1",
                    "targetPort": "1_in"
                },
                {
                    "id": "port_10_to_port_1",
                    "sourceNode": "10",
                    "sourcePort": "10_out",
                    "targetNode": "1",
                    "targetPort": "1_in"
                },
                {
                    "id": "port_26_to_port_17",
                    "sourceNode": "26",
                    "sourcePort": "26_out",
                    "targetNode": "17",
                    "targetPort": "17_in"
                },
                {
                    "id": "port_17_to_port_19",
                    "sourceNode": "17",
                    "sourcePort": "17_out",
                    "targetNode": "19",
                    "targetPort": "19_in"
                },
                {
                    "conditions": [
                        {
                            "index": 0
                        }
                    ],
                    "id": "port_13_to_port_27",
                    "sourceNode": "13",
                    "sourcePort": "13_out",
                    "targetNode": "27",
                    "targetPort": "27_in"
                },
                {
                    "conditions": [
                        {
                            "index": 0
                        }
                    ],
                    "id": "port_13_to_port_7",
                    "sourceNode": "13",
                    "sourcePort": "13_out",
                    "targetNode": "7",
                    "targetPort": "7_in"
                },
                {
                    "conditions": [
                        {
                            "index": 0
                        }
                    ],
                    "id": "port_7_to_port_26",
                    "sourceNode": "7",
                    "sourcePort": "7_out",
                    "targetNode": "26",
                    "targetPort": "26_in"
                },
                {
                    "id": "port_27_to_port_3",
                    "sourceNode": "27",
                    "sourcePort": "27_out",
                    "targetNode": "3",
                    "targetPort": "3_in"
                },
                {
                    "conditions": [
                        {
                            "index": 1
                        }
                    ],
                    "id": "port_3_to_port_16",
                    "sourceNode": "3",
                    "sourcePort": "3_out",
                    "targetNode": "16",
                    "targetPort": "16_in"
                },
                {
                    "conditions": [
                        {
                            "index": 0
                        }
                    ],
                    "id": "port_3_to_port_25",
                    "sourceNode": "3",
                    "sourcePort": "3_out",
                    "targetNode": "25",
                    "targetPort": "25_in"
                },
                {
                    "conditions": [
                        {
                            "index": 1
                        }
                    ],
                    "id": "port_25_to_port_16",
                    "sourceNode": "25",
                    "sourcePort": "25_out",
                    "targetNode": "16",
                    "targetPort": "16_in"
                },
                {
                    "id": "port_19_to_port_1",
                    "sourceNode": "19",
                    "sourcePort": "19_out",
                    "targetNode": "1",
                    "targetPort": "1_in"
                },
                {
                    "id": "port_9_to_port_1",
                    "sourceNode": "9",
                    "sourcePort": "9_out",
                    "targetNode": "1",
                    "targetPort": "1_in"
                },
                {
                    "conditions": [
                        {
                            "index": 0
                        }
                    ],
                    "id": "port_12_to_port_15",
                    "sourceNode": "12",
                    "sourcePort": "12_out",
                    "targetNode": "15",
                    "targetPort": "15_in"
                },
                {
                    "conditions": [
                        {
                            "index": 0
                        }
                    ],
                    "id": "port_8_to_port_23",
                    "sourceNode": "8",
                    "sourcePort": "8_out",
                    "targetNode": "23",
                    "targetPort": "23_in"
                },
                {
                    "id": "port_23_to_port_24",
                    "sourceNode": "23",
                    "sourcePort": "23_out",
                    "targetNode": "24",
                    "targetPort": "24_in"
                },
                {
                    "id": "port_24_to_port_21",
                    "sourceNode": "24",
                    "sourcePort": "24_out",
                    "targetNode": "21",
                    "targetPort": "21_in"
                },
                {
                    "conditions": [
                        {
                            "index": 0
                        }
                    ],
                    "id": "port_25_to_port_18",
                    "sourceNode": "25",
                    "sourcePort": "25_out",
                    "targetNode": "18",
                    "targetPort": "18_in"
                },
                {
                    "id": "port_18_to_port_20",
                    "sourceNode": "18",
                    "sourcePort": "18_out",
                    "targetNode": "20",
                    "targetPort": "20_in"
                },
                {
                    "id": "port_20_to_port_21",
                    "sourceNode": "20",
                    "sourcePort": "20_out",
                    "targetNode": "21",
                    "targetPort": "21_in"
                },
                {
                    "conditions": [
                        {
                            "index": 0
                        }
                    ],
                    "id": "port_6_to_port_12",
                    "sourceNode": "6",
                    "sourcePort": "6_out",
                    "targetNode": "12",
                    "targetPort": "12_in"
                }
            ],
            "hash": "80cdab824401101dac0135613b4be6edd273f780",
            "nodes": {
                "0": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "functionName": "on_start",
                        "id": "0",
                        "type": "start"
                    },
                    "errors": {},
                    "id": "0",
                    "type": "start",
                    "warnings": {},
                    "x": 900,
                    "y": 59.99999999999977
                },
                "1": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "functionName": "on_finish",
                        "id": "1",
                        "type": "end"
                    },
                    "errors": {},
                    "id": "1",
                    "type": "end",
                    "warnings": {},
                    "x": 100,
                    "y": 2400
                },
                "10": {
                    "data": {
                        "advanced": {
                            "customName": "API_Add_Comment_Unknown_OS_Found",
                            "customNameId": 0,
                            "join": []
                        },
                        "functionId": 3,
                        "functionName": "API_Add_Comment_Unknown_OS_Found",
                        "id": "10",
                        "type": "utility",
                        "utilities": {
                            "comment": {
                                "description": "",
                                "fields": [
                                    {
                                        "description": "",
                                        "label": "comment",
                                        "name": "comment",
                                        "placeholder": "Enter a comment",
                                        "renderType": "datapath",
                                        "required": true
                                    },
                                    {
                                        "hidden": true,
                                        "name": "container",
                                        "required": false
                                    },
                                    {
                                        "hidden": true,
                                        "name": "author",
                                        "required": false
                                    },
                                    {
                                        "hidden": true,
                                        "name": "trace",
                                        "required": false
                                    }
                                ],
                                "label": "add comment",
                                "name": "comment"
                            }
                        },
                        "values": {
                            "comment": {
                                "_internal": [
                                    "container",
                                    "author",
                                    "trace"
                                ],
                                "comment": "Unknown OS found."
                            }
                        }
                    },
                    "errors": {},
                    "id": "10",
                    "tab": "apis",
                    "type": "utility",
                    "warnings": {},
                    "x": 800,
                    "y": 2160
                },
                "11": {
                    "data": {
                        "action": "update artifact",
                        "actionType": "generic",
                        "advanced": {
                            "customName": "PH_Update_Artifact_OS_Type_Windows",
                            "customNameId": 0,
                            "join": [],
                            "scope": "all"
                        },
                        "connector": "Phantom",
                        "connectorConfigs": [
                            "phantom"
                        ],
                        "connectorId": "deb82aa9-22cc-4675-9cf1-534b8d006eb7",
                        "connectorVersion": "v1",
                        "functionId": 1,
                        "functionName": "PH_Update_Artifact_OS_Type_Windows",
                        "id": "11",
                        "parameters": {
                            "artifact_id": "filtered-data:FL_Host_OS_Artifact:condition_1:artifact:*.id",
                            "artifact_json": "",
                            "cef_json": "{\"host_os_type\": \"Windows\"}",
                            "cef_types_json": "",
                            "label": "",
                            "name": "",
                            "overwrite": "",
                            "severity": "",
                            "tags": ""
                        },
                        "requiredParameters": [
                            {
                                "data_type": "string",
                                "field": "artifact_id"
                            }
                        ],
                        "type": "action"
                    },
                    "errors": {},
                    "id": "11",
                    "type": "action",
                    "warnings": {},
                    "x": 540,
                    "y": 2160
                },
                "12": {
                    "data": {
                        "advanced": {
                            "customName": "fl_host_artifact",
                            "customNameId": 0,
                            "join": []
                        },
                        "conditions": [
                            {
                                "comparisons": [
                                    {
                                        "conditionIndex": 0,
                                        "op": "==",
                                        "param": "artifact:*.name",
                                        "value": "Host Artifact"
                                    }
                                ],
                                "conditionIndex": 0,
                                "logic": "and"
                            }
                        ],
                        "functionId": 3,
                        "functionName": "fl_host_artifact",
                        "id": "12",
                        "type": "filter"
                    },
                    "errors": {},
                    "id": "12",
                    "type": "filter",
                    "warnings": {},
                    "x": 940,
                    "y": 340
                },
                "13": {
                    "data": {
                        "advanced": {
                            "customName": "db_is_client_os_fsctcenter_event_exist",
                            "customNameId": 0,
                            "join": []
                        },
                        "conditions": [
                            {
                                "comparisons": [
                                    {
                                        "conditionIndex": 0,
                                        "op": ">",
                                        "param": "spl_client_os_fsctcenter:action_result.summary.total_events",
                                        "value": "0"
                                    }
                                ],
                                "conditionIndex": 0,
                                "display": "If",
                                "logic": "and",
                                "type": "if"
                            },
                            {
                                "comparisons": [
                                    {
                                        "conditionIndex": 1,
                                        "op": "==",
                                        "param": "",
                                        "value": ""
                                    }
                                ],
                                "conditionIndex": 1,
                                "display": "Else",
                                "logic": "and",
                                "type": "else"
                            }
                        ],
                        "functionId": 2,
                        "functionName": "db_is_client_os_fsctcenter_event_exist",
                        "id": "13",
                        "type": "decision"
                    },
                    "errors": {},
                    "id": "13",
                    "type": "decision",
                    "warnings": {},
                    "x": 960,
                    "y": 820
                },
                "14": {
                    "data": {
                        "advanced": {
                            "customName": "api_addcomment_client_ip_not_found",
                            "customNameId": 0,
                            "join": []
                        },
                        "functionId": 1,
                        "functionName": "api_addcomment_client_ip_not_found",
                        "id": "14",
                        "type": "utility",
                        "utilities": {
                            "comment": {
                                "description": "",
                                "fields": [
                                    {
                                        "description": "",
                                        "label": "comment",
                                        "name": "comment",
                                        "placeholder": "Enter a comment",
                                        "renderType": "datapath",
                                        "required": true
                                    },
                                    {
                                        "hidden": true,
                                        "name": "container",
                                        "required": false
                                    },
                                    {
                                        "hidden": true,
                                        "name": "author",
                                        "required": false
                                    },
                                    {
                                        "hidden": true,
                                        "name": "trace",
                                        "required": false
                                    }
                                ],
                                "label": "add comment",
                                "name": "comment"
                            }
                        },
                        "values": {
                            "comment": {
                                "_internal": [
                                    "container",
                                    "author",
                                    "trace"
                                ],
                                "comment": "Client IP not found to get the OS type of."
                            }
                        }
                    },
                    "errors": {},
                    "id": "14",
                    "tab": "apis",
                    "type": "utility",
                    "warnings": {},
                    "x": -20.000000000000014,
                    "y": 359.99999999999983
                },
                "15": {
                    "data": {
                        "advanced": {
                            "customName": "fb_spl_client_os_fsctcenter",
                            "customNameId": 0,
                            "join": [],
                            "separator": ", "
                        },
                        "functionId": 1,
                        "functionName": "fb_spl_client_os_fsctcenter",
                        "id": "15",
                        "parameters": [
                            "filtered-data:FL_Host_Artifact:condition_1:artifact:*.cef.client_ip"
                        ],
                        "template": "index=security sourcetype=\"fsctcenter_avp \"{0}\" Operating System:\" NOT (\"Operating System: Unknown\") NOT (\"Operating System: Multiple Suggestions\") earliest=-15m \n| dedup sourcetype",
                        "type": "format"
                    },
                    "errors": {},
                    "id": "15",
                    "type": "format",
                    "warnings": {},
                    "x": 890,
                    "y": 508
                },
                "16": {
                    "data": {
                        "advanced": {
                            "customName": "fb_spl_client_os_rapid7",
                            "customNameId": 0,
                            "join": [],
                            "notRequiredJoins": [
                                "CF_Extract_OS_From_Event_fsctcenter",
                                "SPL_Client_OS_fsctcenter"
                            ],
                            "separator": ", "
                        },
                        "functionId": 4,
                        "functionName": "fb_spl_client_os_rapid7",
                        "id": "16",
                        "parameters": [
                            "filtered-data:FL_Host_Artifact:condition_1:artifact:*.cef.client_ip"
                        ],
                        "template": "index=rapid7 sourcetype=\"rapid7:insightvm:asset\"  {0} \n earliest=-30d \n| dedup os",
                        "type": "format"
                    },
                    "errors": {},
                    "id": "16",
                    "type": "format",
                    "warnings": {},
                    "x": 320,
                    "y": 1000
                },
                "17": {
                    "data": {
                        "advanced": {
                            "customName": "fb_update_artifact_host_name_1",
                            "customNameId": 0,
                            "join": [],
                            "scope": "all",
                            "separator": ", "
                        },
                        "functionId": 6,
                        "functionName": "fb_update_artifact_host_name_1",
                        "id": "17",
                        "parameters": [
                            "cf_mbs_extract_regex_from_list_2:custom_function_result.data.output_item"
                        ],
                        "template": "{{\"host_name\": \"{0}\"}}",
                        "type": "format"
                    },
                    "errors": {},
                    "id": "17",
                    "type": "format",
                    "warnings": {},
                    "x": 1060,
                    "y": 1320
                },
                "18": {
                    "data": {
                        "advanced": {
                            "customName": "fb_host_os_fsctcenter",
                            "customNameId": 0,
                            "join": [],
                            "separator": ", "
                        },
                        "functionId": 10,
                        "functionName": "fb_host_os_fsctcenter",
                        "id": "18",
                        "parameters": [
                            "cf_extract_os_from_event_fsctcenter:custom_function_result.data.output_item"
                        ],
                        "template": "{{\"host_os\": \"{0}\"}}",
                        "type": "format"
                    },
                    "errors": {},
                    "id": "18",
                    "type": "format",
                    "warnings": {},
                    "x": 660,
                    "y": 1500
                },
                "19": {
                    "data": {
                        "action": "update artifact",
                        "actionType": "generic",
                        "advanced": {
                            "customName": "PH_Update_Artifact_Host_Name_1",
                            "customNameId": 0,
                            "join": [],
                            "scope": "all"
                        },
                        "connector": "Phantom",
                        "connectorConfigs": [
                            "phantom"
                        ],
                        "connectorId": "deb82aa9-22cc-4675-9cf1-534b8d006eb7",
                        "connectorVersion": "v1",
                        "functionId": 3,
                        "functionName": "PH_Update_Artifact_Host_Name_1",
                        "id": "19",
                        "parameters": {
                            "artifact_id": "filtered-data:FL_Host_Artifact:condition_1:artifact:*.id",
                            "artifact_json": "",
                            "cef_json": "FB_Update_Artifact_Host_Name_1:formatted_data",
                            "cef_types_json": "",
                            "label": "",
                            "name": "",
                            "overwrite": "True",
                            "severity": "",
                            "tags": ""
                        },
                        "requiredParameters": [
                            {
                                "data_type": "string",
                                "field": "artifact_id"
                            }
                        ],
                        "type": "action"
                    },
                    "errors": {},
                    "id": "19",
                    "type": "action",
                    "warnings": {},
                    "x": 1060,
                    "y": 2160
                },
                "2": {
                    "data": {
                        "action": "run query",
                        "actionType": "investigate",
                        "advanced": {
                            "customName": "spl_client_os_rapid7",
                            "customNameId": 0,
                            "join": []
                        },
                        "connector": "Splunk",
                        "connectorConfigs": [
                            "splunk prod"
                        ],
                        "connectorId": "91883aa8-9c81-470b-97a1-5d8f7995f560",
                        "connectorVersion": "v1",
                        "functionId": 2,
                        "functionName": "spl_client_os_rapid7",
                        "id": "2",
                        "parameters": {
                            "command": "search",
                            "display": "",
                            "parse_only": "",
                            "query": "FB_SPL_Client_OS_rapid7:formatted_data"
                        },
                        "requiredParameters": [
                            {
                                "data_type": "string",
                                "field": "query"
                            }
                        ],
                        "type": "action"
                    },
                    "errors": {},
                    "id": "2",
                    "type": "action",
                    "warnings": {},
                    "x": 320,
                    "y": 1180
                },
                "20": {
                    "data": {
                        "action": "update artifact",
                        "actionType": "generic",
                        "advanced": {
                            "customName": "ph_update_artifact_fsctcenter",
                            "customNameId": 0,
                            "join": []
                        },
                        "connector": "Phantom",
                        "connectorConfigs": [
                            "phantom"
                        ],
                        "connectorId": "deb82aa9-22cc-4675-9cf1-534b8d006eb7",
                        "connectorVersion": "v1",
                        "functionId": 7,
                        "functionName": "ph_update_artifact_fsctcenter",
                        "id": "20",
                        "parameters": {
                            "artifact_id": "filtered-data:FL_Host_Artifact:condition_1:artifact:*.id",
                            "artifact_json": "",
                            "cef_json": "fb_host_os_fsctcenter:formatted_data",
                            "cef_types_json": "",
                            "label": "",
                            "name": "",
                            "overwrite": "",
                            "severity": "",
                            "tags": ""
                        },
                        "requiredParameters": [
                            {
                                "data_type": "string",
                                "field": "artifact_id"
                            }
                        ],
                        "type": "action"
                    },
                    "errors": {},
                    "id": "20",
                    "type": "action",
                    "warnings": {},
                    "x": 660,
                    "y": 1680
                },
                "21": {
                    "data": {
                        "advanced": {
                            "case_sensitive": true,
                            "customName": "fl_host_os_artifact",
                            "customNameId": 0,
                            "join": [],
                            "notRequiredJoins": [
                                "PH_Update_Artifact_rapid7",
                                "PH_Update_Artifact_fsctcenter"
                            ],
                            "scope": "all"
                        },
                        "conditions": [
                            {
                                "comparisons": [
                                    {
                                        "conditionIndex": 0,
                                        "op": "!=",
                                        "param": "artifact:*.cef.host_os",
                                        "value": ""
                                    }
                                ],
                                "conditionIndex": 0,
                                "logic": "and"
                            }
                        ],
                        "functionId": 2,
                        "functionName": "fl_host_os_artifact",
                        "id": "21",
                        "type": "filter"
                    },
                    "errors": {},
                    "id": "21",
                    "type": "filter",
                    "warnings": {},
                    "x": 600,
                    "y": 1860
                },
                "22": {
                    "data": {
                        "advanced": {
                            "case_sensitive": true,
                            "customName": "db_identify_os",
                            "customNameId": 0,
                            "join": [],
                            "scope": "all"
                        },
                        "conditions": [
                            {
                                "comparisons": [
                                    {
                                        "conditionIndex": 0,
                                        "op": "in",
                                        "param": "windows",
                                        "value": "filtered-data:FL_Host_OS_Artifact:condition_1:artifact:*.cef.host_os"
                                    }
                                ],
                                "conditionIndex": 0,
                                "customName": "windows",
                                "display": "If",
                                "logic": "and",
                                "type": "if"
                            },
                            {
                                "comparisons": [
                                    {
                                        "conditionIndex": 1,
                                        "op": "in",
                                        "param": "linux",
                                        "value": "filtered-data:FL_Host_OS_Artifact:condition_1:artifact:*.cef.host_os"
                                    }
                                ],
                                "conditionIndex": 1,
                                "customName": "linux",
                                "display": "Else If",
                                "logic": "and",
                                "type": "elif"
                            },
                            {
                                "comparisons": [
                                    {
                                        "conditionIndex": 2,
                                        "op": "==",
                                        "param": "",
                                        "value": ""
                                    }
                                ],
                                "conditionIndex": 2,
                                "customName": "else",
                                "display": "Else",
                                "logic": "and",
                                "type": "else"
                            }
                        ],
                        "functionId": 4,
                        "functionName": "db_identify_os",
                        "id": "22",
                        "type": "decision"
                    },
                    "errors": {},
                    "id": "22",
                    "type": "decision",
                    "warnings": {},
                    "x": 620,
                    "y": 2020
                },
                "23": {
                    "data": {
                        "advanced": {
                            "customName": "fb_host_os_rapid7",
                            "customNameId": 0,
                            "join": [],
                            "separator": ", "
                        },
                        "functionId": 9,
                        "functionName": "fb_host_os_rapid7",
                        "id": "23",
                        "parameters": [
                            "spl_client_os_rapid7:action_result.data.*.os"
                        ],
                        "template": "{{\"host_os\": \"{0}\"}}",
                        "type": "format"
                    },
                    "errors": {},
                    "id": "23",
                    "type": "format",
                    "warnings": {},
                    "x": 400,
                    "y": 1500
                },
                "24": {
                    "data": {
                        "action": "update artifact",
                        "actionType": "generic",
                        "advanced": {
                            "customName": "ph_update_artifact_rapid7",
                            "customNameId": 0,
                            "join": []
                        },
                        "connector": "Phantom",
                        "connectorConfigs": [
                            "phantom"
                        ],
                        "connectorId": "deb82aa9-22cc-4675-9cf1-534b8d006eb7",
                        "connectorVersion": "v1",
                        "functionId": 6,
                        "functionName": "ph_update_artifact_rapid7",
                        "id": "24",
                        "parameters": {
                            "artifact_id": "filtered-data:FL_Host_Artifact:condition_1:artifact:*.id",
                            "artifact_json": "",
                            "cef_json": "fb_host_os_rapid7:formatted_data",
                            "cef_types_json": "",
                            "label": "",
                            "name": "",
                            "overwrite": "",
                            "severity": "",
                            "tags": ""
                        },
                        "requiredParameters": [
                            {
                                "data_type": "string",
                                "field": "artifact_id"
                            }
                        ],
                        "type": "action"
                    },
                    "errors": {},
                    "id": "24",
                    "type": "action",
                    "warnings": {},
                    "x": 400,
                    "y": 1680
                },
                "25": {
                    "data": {
                        "advanced": {
                            "case_sensitive": true,
                            "join": [],
                            "scope": "all"
                        },
                        "conditions": [
                            {
                                "comparisons": [
                                    {
                                        "conditionIndex": 0,
                                        "op": "!=",
                                        "param": "cf_extract_os_from_event_fsctcenter:custom_function_result.data.output_item",
                                        "value": "windows"
                                    }
                                ],
                                "conditionIndex": 0,
                                "display": "If",
                                "logic": "and",
                                "type": "if"
                            },
                            {
                                "comparisons": [
                                    {
                                        "conditionIndex": 1,
                                        "op": "==",
                                        "param": "",
                                        "value": ""
                                    }
                                ],
                                "conditionIndex": 1,
                                "display": "Else",
                                "logic": "and",
                                "type": "else"
                            }
                        ],
                        "functionId": 7,
                        "functionName": "decision_7",
                        "id": "25",
                        "type": "decision"
                    },
                    "errors": {},
                    "id": "25",
                    "type": "decision",
                    "warnings": {},
                    "x": 740,
                    "y": 1300
                },
                "26": {
                    "data": {
                        "advanced": {
                            "customName": "cf_mbs_extract_regex_from_list_2",
                            "customNameId": 0,
                            "join": []
                        },
                        "customFunction": {
                            "draftMode": false,
                            "name": "extract_regex_from_list",
                            "repoName": "mbs"
                        },
                        "functionId": 2,
                        "functionName": "cf_mbs_extract_regex_from_list_2",
                        "id": "26",
                        "type": "utility",
                        "utilities": {
                            "extract_regex_from_list": {
                                "description": "Extract regex patterns from input list and pass them as an output list. The output of this custom function would be a list of strings.",
                                "fields": [
                                    {
                                        "dataTypes": [
                                            "*"
                                        ],
                                        "description": "",
                                        "inputType": "list",
                                        "label": "input_list",
                                        "name": "input_list",
                                        "placeholder": "requestURL, sourceAddress etc.",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "dataTypes": [
                                            "*"
                                        ],
                                        "description": "",
                                        "inputType": "item",
                                        "label": "regex_pattern",
                                        "name": "regex_pattern",
                                        "placeholder": "regex pattern as a string",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "dataTypes": [
                                            "*"
                                        ],
                                        "description": "0=drop input artifact if a regex match was not found for that artifact.\n1=Pass the input IOC in the output if a regex match was not found.\n\nAn artifact will be dropped from passing on as output if this field is left empty and there is no regex match found.",
                                        "inputType": "item",
                                        "label": "drop_or_pass_input_ioc",
                                        "name": "drop_or_pass_input_ioc",
                                        "placeholder": "0/1",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "dataTypes": [],
                                        "description": "This will work only if the input list has one item in it. Default = false",
                                        "inputType": "item",
                                        "label": "output_as_string",
                                        "name": "output_as_string",
                                        "placeholder": "true/false",
                                        "renderType": "datapath",
                                        "required": false
                                    }
                                ],
                                "label": "extract_regex_from_list",
                                "name": "extract_regex_from_list"
                            }
                        },
                        "utilityType": "custom_function",
                        "values": {
                            "extract_regex_from_list": {
                                "drop_or_pass_input_ioc": null,
                                "input_list": "spl_client_os_fsctcenter:action_result.data.*._raw",
                                "output_as_string": "true",
                                "regex_pattern": "Hostname: (.+)\\s"
                            }
                        }
                    },
                    "errors": {},
                    "id": "26",
                    "tab": "customFunctions",
                    "type": "utility",
                    "userCode": "    # Write your custom code here...",
                    "warnings": {},
                    "x": 1060,
                    "y": 1160
                },
                "27": {
                    "data": {
                        "advanced": {
                            "customName": "cf_extract_os_from_event_fsctcenter",
                            "customNameId": 0,
                            "join": []
                        },
                        "customFunction": {
                            "draftMode": false,
                            "name": "extract_regex_from_list",
                            "repoName": "mbs"
                        },
                        "functionId": 1,
                        "functionName": "cf_extract_os_from_event_fsctcenter",
                        "id": "27",
                        "type": "utility",
                        "utilities": {
                            "extract_regex_from_list": {
                                "description": "Extract regex patterns from input list and pass them as an output list. The output of this custom function would be a list of strings.",
                                "fields": [
                                    {
                                        "dataTypes": [
                                            "*"
                                        ],
                                        "description": "",
                                        "inputType": "list",
                                        "label": "input_list",
                                        "name": "input_list",
                                        "placeholder": "requestURL, sourceAddress etc.",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "dataTypes": [
                                            "*"
                                        ],
                                        "description": "",
                                        "inputType": "item",
                                        "label": "regex_pattern",
                                        "name": "regex_pattern",
                                        "placeholder": "regex pattern as a string",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "dataTypes": [
                                            "*"
                                        ],
                                        "description": "0=drop input artifact if a regex match was not found for that artifact.\n1=Pass the input IOC in the output if a regex match was not found.\n\nAn artifact will be dropped from passing on as output if this field is left empty and there is no regex match found.",
                                        "inputType": "item",
                                        "label": "drop_or_pass_input_ioc",
                                        "name": "drop_or_pass_input_ioc",
                                        "placeholder": "0/1",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "dataTypes": [],
                                        "description": "This will work only if the input list has one item in it. Default = false",
                                        "inputType": "item",
                                        "label": "output_as_string",
                                        "name": "output_as_string",
                                        "placeholder": "true/false",
                                        "renderType": "datapath",
                                        "required": false
                                    }
                                ],
                                "label": "extract_regex_from_list",
                                "name": "extract_regex_from_list"
                            }
                        },
                        "utilityType": "custom_function",
                        "values": {
                            "extract_regex_from_list": {
                                "drop_or_pass_input_ioc": null,
                                "input_list": "spl_client_os_fsctcenter:action_result.data.*._raw",
                                "output_as_string": "true",
                                "regex_pattern": "Operating System: (.+)$"
                            }
                        }
                    },
                    "errors": {},
                    "id": "27",
                    "tab": "customFunctions",
                    "type": "utility",
                    "userCode": "    # Write your custom code here...",
                    "warnings": {},
                    "x": 660,
                    "y": 1020
                },
                "3": {
                    "data": {
                        "advanced": {
                            "case_sensitive": true,
                            "join": [],
                            "scope": "all"
                        },
                        "conditions": [
                            {
                                "comparisons": [
                                    {
                                        "conditionIndex": 0,
                                        "op": "in",
                                        "param": "windows",
                                        "value": "cf_extract_os_from_event_fsctcenter:custom_function_result.data.output_item"
                                    },
                                    {
                                        "conditionIndex": 0,
                                        "op": "in",
                                        "param": "linux",
                                        "value": "cf_extract_os_from_event_fsctcenter:custom_function_result.data.output_item"
                                    }
                                ],
                                "conditionIndex": 0,
                                "display": "If",
                                "logic": "or",
                                "type": "if"
                            },
                            {
                                "comparisons": [
                                    {
                                        "conditionIndex": 1,
                                        "op": "==",
                                        "param": "",
                                        "value": ""
                                    }
                                ],
                                "conditionIndex": 1,
                                "display": "Else",
                                "logic": "and",
                                "type": "else"
                            }
                        ],
                        "functionId": 6,
                        "functionName": "decision_6",
                        "id": "3",
                        "type": "decision"
                    },
                    "errors": {},
                    "id": "3",
                    "type": "decision",
                    "warnings": {},
                    "x": 740,
                    "y": 1160
                },
                "4": {
                    "data": {
                        "action": "update artifact",
                        "actionType": "generic",
                        "advanced": {
                            "customName": "PH_Update_Artifact_OS_Type_Linux",
                            "customNameId": 0,
                            "join": [],
                            "scope": "all"
                        },
                        "connector": "Phantom",
                        "connectorConfigs": [
                            "phantom"
                        ],
                        "connectorId": "deb82aa9-22cc-4675-9cf1-534b8d006eb7",
                        "connectorVersion": "v1",
                        "functionId": 2,
                        "functionName": "PH_Update_Artifact_OS_Type_Linux",
                        "id": "4",
                        "parameters": {
                            "artifact_id": "filtered-data:FL_Host_OS_Artifact:condition_1:artifact:*.id",
                            "artifact_json": "",
                            "cef_json": "{\"host_os_type\": \"Linux\"}",
                            "cef_types_json": "",
                            "label": "",
                            "name": "",
                            "overwrite": "",
                            "severity": "",
                            "tags": ""
                        },
                        "requiredParameters": [
                            {
                                "data_type": "string",
                                "field": "artifact_id"
                            }
                        ],
                        "type": "action"
                    },
                    "errors": {},
                    "id": "4",
                    "type": "action",
                    "warnings": {},
                    "x": 280,
                    "y": 2160
                },
                "5": {
                    "data": {
                        "action": "run query",
                        "actionType": "investigate",
                        "advanced": {
                            "customName": "spl_client_os_fsctcenter",
                            "customNameId": 0,
                            "join": []
                        },
                        "connector": "Splunk",
                        "connectorConfigs": [
                            "splunk prod"
                        ],
                        "connectorId": "91883aa8-9c81-470b-97a1-5d8f7995f560",
                        "connectorVersion": "v1",
                        "functionId": 1,
                        "functionName": "spl_client_os_fsctcenter",
                        "id": "5",
                        "parameters": {
                            "command": "search",
                            "display": "",
                            "parse_only": "",
                            "query": "FB_SPL_Client_OS_fsctcenter:formatted_data"
                        },
                        "requiredParameters": [
                            {
                                "data_type": "string",
                                "field": "query"
                            }
                        ],
                        "type": "action"
                    },
                    "errors": {},
                    "id": "5",
                    "type": "action",
                    "warnings": {},
                    "x": 890,
                    "y": 672
                },
                "6": {
                    "data": {
                        "advanced": {
                            "case_sensitive": true,
                            "customName": "db_is_client_ip_exist",
                            "customNameId": 0,
                            "join": [],
                            "scope": "all"
                        },
                        "conditions": [
                            {
                                "comparisons": [
                                    {
                                        "conditionIndex": 0,
                                        "op": "!=",
                                        "param": "artifact:*.cef.sourceAddress",
                                        "value": ""
                                    },
                                    {
                                        "conditionIndex": 0,
                                        "op": "in",
                                        "param": "client_ip",
                                        "value": "artifact:*.tags"
                                    }
                                ],
                                "conditionIndex": 0,
                                "display": "If",
                                "logic": "and",
                                "type": "if"
                            },
                            {
                                "comparisons": [
                                    {
                                        "conditionIndex": 1,
                                        "op": "==",
                                        "param": "",
                                        "value": ""
                                    }
                                ],
                                "conditionIndex": 1,
                                "display": "Else",
                                "logic": "and",
                                "type": "else"
                            }
                        ],
                        "functionId": 1,
                        "functionName": "db_is_client_ip_exist",
                        "id": "6",
                        "type": "decision"
                    },
                    "errors": {},
                    "id": "6",
                    "type": "decision",
                    "warnings": {},
                    "x": 960,
                    "y": 180
                },
                "7": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "conditions": [
                            {
                                "comparisons": [
                                    {
                                        "conditionIndex": 0,
                                        "op": "not in",
                                        "param": "Hostname: Irresolvable",
                                        "value": "spl_client_os_fsctcenter:action_result.data.*._raw"
                                    }
                                ],
                                "conditionIndex": 0,
                                "display": "If",
                                "logic": "and",
                                "type": "if"
                            }
                        ],
                        "functionId": 5,
                        "functionName": "decision_5",
                        "id": "7",
                        "type": "decision"
                    },
                    "errors": {},
                    "id": "7",
                    "type": "decision",
                    "warnings": {},
                    "x": 1140,
                    "y": 1020
                },
                "8": {
                    "data": {
                        "advanced": {
                            "customName": "db_is_client_os_rapid7_event_exist",
                            "customNameId": 0,
                            "join": []
                        },
                        "conditions": [
                            {
                                "comparisons": [
                                    {
                                        "conditionIndex": 0,
                                        "op": ">",
                                        "param": "spl_client_os_rapid7:action_result.summary.total_events",
                                        "value": "0"
                                    }
                                ],
                                "conditionIndex": 0,
                                "display": "If",
                                "logic": "and",
                                "type": "if"
                            },
                            {
                                "comparisons": [
                                    {
                                        "conditionIndex": 1,
                                        "op": "==",
                                        "param": "",
                                        "value": ""
                                    }
                                ],
                                "conditionIndex": 1,
                                "display": "Else",
                                "logic": "and",
                                "type": "else"
                            }
                        ],
                        "functionId": 3,
                        "functionName": "db_is_client_os_rapid7_event_exist",
                        "id": "8",
                        "type": "decision"
                    },
                    "errors": {},
                    "id": "8",
                    "type": "decision",
                    "warnings": {},
                    "x": 400,
                    "y": 1280
                },
                "9": {
                    "data": {
                        "advanced": {
                            "customName": "api_add__note_comment_couldnt_find_os",
                            "customNameId": 0,
                            "join": []
                        },
                        "functionId": 2,
                        "functionName": "api_add__note_comment_couldnt_find_os",
                        "id": "9",
                        "type": "utility",
                        "utilities": {
                            "add_note": {
                                "description": "",
                                "fields": [
                                    {
                                        "description": "",
                                        "label": "title",
                                        "name": "title",
                                        "placeholder": "Enter a note title",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "description": "",
                                        "label": "content",
                                        "name": "content",
                                        "placeholder": "Enter the note content",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "choices": [
                                            "markdown",
                                            "html"
                                        ],
                                        "default": "markdown",
                                        "description": "",
                                        "label": "note format",
                                        "name": "note_format",
                                        "placeholder": "Enter the note content",
                                        "renderType": "dropdown",
                                        "required": false
                                    },
                                    {
                                        "hidden": true,
                                        "name": "container",
                                        "required": false
                                    },
                                    {
                                        "default": "general",
                                        "hidden": true,
                                        "name": "note_type",
                                        "required": false
                                    },
                                    {
                                        "hidden": true,
                                        "name": "author",
                                        "required": false
                                    },
                                    {
                                        "hidden": true,
                                        "name": "event_id",
                                        "required": false
                                    },
                                    {
                                        "hidden": true,
                                        "name": "task_id",
                                        "required": false
                                    },
                                    {
                                        "hidden": true,
                                        "name": "trace",
                                        "required": false
                                    }
                                ],
                                "label": "add note",
                                "name": "add_note"
                            },
                            "comment": {
                                "description": "",
                                "fields": [
                                    {
                                        "description": "",
                                        "label": "comment",
                                        "name": "comment",
                                        "placeholder": "Enter a comment",
                                        "renderType": "datapath",
                                        "required": true
                                    },
                                    {
                                        "hidden": true,
                                        "name": "container",
                                        "required": false
                                    },
                                    {
                                        "hidden": true,
                                        "name": "author",
                                        "required": false
                                    },
                                    {
                                        "hidden": true,
                                        "name": "trace",
                                        "required": false
                                    }
                                ],
                                "label": "add comment",
                                "name": "comment"
                            }
                        },
                        "values": {
                            "add_note": {
                                "_internal": [
                                    "container",
                                    "note_type",
                                    "author",
                                    "event_id",
                                    "task_id",
                                    "trace"
                                ],
                                "content": "Phantom couldn't find the OS type of the client IP. Hence the analyst need to take over and manually investigate this event.",
                                "note_format": "html",
                                "title": "Couldn't find OS Type Analyst to manually investigate"
                            },
                            "comment": {
                                "_internal": [
                                    "container",
                                    "author",
                                    "trace"
                                ],
                                "comment": "Couldn't find OS type."
                            }
                        }
                    },
                    "errors": {},
                    "id": "9",
                    "tab": "apis",
                    "type": "utility",
                    "warnings": {},
                    "x": 120,
                    "y": 1500
                }
            },
            "notes": "This playbook finds the OS type of the end point device from the hostname (preference) or from the IP."
        },
        "input_spec": null,
        "output_spec": null,
        "playbook_type": "automation",
        "python_version": "3",
        "schema": "5.0.10",
        "version": "6.1.1.211"
    },
    "create_time": "2023-12-05T07:20:28.750556+00:00",
    "draft_mode": false,
    "labels": [
        "*"
    ],
    "tags": []
}