"""
This playbook checks if an artifact in the container has a &quot;malicious&quot; tag. It will trigger an anti-malware scan for workstation and create an INC ticket. It will create an INC ticket for server.
"""


import phantom.rules as phantom
import json
from datetime import datetime, timedelta


@phantom.playbook_block()
def on_start(container):
    phantom.debug('on_start() called')

    # call 'fl_malicious_tag' block
    fl_malicious_tag(container=container)

    return

@phantom.playbook_block()
def inc_description_for_server(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):
    phantom.debug("inc_description_for_server() called")

    template = """Hi Team,\n\nKindly run an AV scan on the following device:\n{0}\n\nThanks."""

    # parameter list for template variable replacement
    parameters = [
        "cf_mbs_retrieve_hostname_from_fqdn_1:custom_function_result.data.host_name"
    ]

    ################################################################################
    ## Custom Code Start
    ################################################################################

    # Write your custom code here...

    ################################################################################
    ## Custom Code End
    ################################################################################

    phantom.format(container=container, template=template, parameters=parameters, name="inc_description_for_server", separator=", ")

    create_inc_for_server(container=container)

    return


@phantom.playbook_block()
def fb_email_subject_server(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):
    phantom.debug("fb_email_subject_server() called")

    template = """[SOAR] {0}: {1}"""

    # parameter list for template variable replacement
    parameters = [
        "create_inc_for_server:action_result.data.*.number",
        "INC_Short_Description_for_server:formatted_data"
    ]

    ################################################################################
    ## Custom Code Start
    ################################################################################

    # Write your custom code here...

    ################################################################################
    ## Custom Code End
    ################################################################################

    phantom.format(container=container, template=template, parameters=parameters, name="fb_email_subject_server", separator=", ")

    fb_email_body_server(container=container)

    return


@phantom.playbook_block()
def fb_email_body_server(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):
    phantom.debug("fb_email_body_server() called")

    template = """Hi Team,\n\nAn INC has been created for \"Singapore MBS System\" to run AV scan for the following device: {0}\n\nKindly furnish the rest of the mandatory fields in the INC in ServiceNow and submit.\n\nSIR ticket: {1}\nINC ticket: {2}\nSOAR Event ID: {3}"""

    # parameter list for template variable replacement
    parameters = [
        "cf_mbs_retrieve_hostname_from_fqdn_1:custom_function_result.data.host_name",
        "filtered-data:FL_SIR_number:condition_1:artifact:*.cef.snow_ticket_number",
        "create_inc_for_server:action_result.data.*.number",
        "container:id"
    ]

    ################################################################################
    ## Custom Code Start
    ################################################################################

    # Write your custom code here...

    ################################################################################
    ## Custom Code End
    ################################################################################

    phantom.format(container=container, template=template, parameters=parameters, name="fb_email_body_server", separator=", ")

    send_email_4(container=container)

    return


@phantom.playbook_block()
def inc_created_for_server(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):
    phantom.debug("inc_created_for_server() called")

    fb_inc_created_server = phantom.get_format_data(name="fb_inc_created_server")

    ################################################################################
    ## Custom Code Start
    ################################################################################

    # Write your custom code here...

    ################################################################################
    ## Custom Code End
    ################################################################################

    phantom.add_note(container=container, content=fb_inc_created_server, note_format="html", title="INC created for server")

    fb_email_subject_server(container=container)

    return


@phantom.playbook_block()
def fb_inc_created_server(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):
    phantom.debug("fb_inc_created_server() called")

    template = """INC created for AV scan: {0}"""

    # parameter list for template variable replacement
    parameters = [
        "create_inc_for_server:action_result.data.*.number"
    ]

    ################################################################################
    ## Custom Code Start
    ################################################################################

    # Write your custom code here...

    ################################################################################
    ## Custom Code End
    ################################################################################

    phantom.format(container=container, template=template, parameters=parameters, name="fb_inc_created_server", separator=", ")

    inc_created_for_server(container=container)

    return


@phantom.playbook_block()
def send_email_4(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):
    phantom.debug("send_email_4() called")

    # phantom.debug('Action: {0} {1}'.format(action['name'], ('SUCCEEDED' if success else 'FAILED')))

    fb_email_body_server = phantom.get_format_data(name="fb_email_body_server")
    fb_email_subject_server = phantom.get_format_data(name="fb_email_subject_server")

    parameters = []

    if fb_email_body_server is not None:
        parameters.append({
            "cc": "",
            "to": "csoc@sands.com",
            "bcc": "",
            "body": fb_email_body_server,
            "from": "",
            "headers": "",
            "subject": fb_email_subject_server,
            "attachments": "",
        })

    ################################################################################
    ## Custom Code Start
    ################################################################################

    # Write your custom code here...

    ################################################################################
    ## Custom Code End
    ################################################################################

    phantom.act("send email", parameters=parameters, name="send_email_4", assets=["internal email smtp"])

    return


@phantom.playbook_block()
def create_inc_for_server(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):
    phantom.debug("create_inc_for_server() called")

    # phantom.debug('Action: {0} {1}'.format(action['name'], ('SUCCEEDED' if success else 'FAILED')))

    inc_fields_for_server = phantom.get_format_data(name="inc_fields_for_server")
    inc_description_for_server = phantom.get_format_data(name="inc_description_for_server")
    inc_short_description_for_server = phantom.get_format_data(name="inc_short_description_for_server")

    parameters = []

    parameters.append({
        "table": "incident",
        "fields": inc_fields_for_server,
        "vault_id": "",
        "description": inc_description_for_server,
        "short_description": inc_short_description_for_server,
    })

    ################################################################################
    ## Custom Code Start
    ################################################################################

    # Write your custom code here...

    ################################################################################
    ## Custom Code End
    ################################################################################

    phantom.act("create ticket", parameters=parameters, name="create_inc_for_server", assets=["snow_prod"], callback=fb_inc_created_server)

    return


@phantom.playbook_block()
def inc_short_description_for_server(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):
    phantom.debug("inc_short_description_for_server() called")

    template = """CSOC - FireEye - Run AV scan on {0}"""

    # parameter list for template variable replacement
    parameters = [
        "cf_mbs_retrieve_hostname_from_fqdn_1:custom_function_result.data.host_name"
    ]

    ################################################################################
    ## Custom Code Start
    ################################################################################

    # Write your custom code here...

    ################################################################################
    ## Custom Code End
    ################################################################################

    phantom.format(container=container, template=template, parameters=parameters, name="inc_short_description_for_server", separator=", ")

    inc_description_for_server(container=container)

    return


@phantom.playbook_block()
def fl_malicious_tag(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):
    phantom.debug("fl_malicious_tag() called")

    # collect filtered artifact ids and results for 'if' condition 1
    matched_artifacts_1, matched_results_1 = phantom.condition(
        container=container,
        conditions=[
            ["malicious", "in", "artifact:*.tags"]
        ],
        name="fl_malicious_tag:condition_1",
        delimiter=None)

    # call connected blocks if filtered artifacts or results
    if matched_artifacts_1 or matched_results_1:
        fl_hostname(action=action, success=success, container=container, results=results, handle=handle, filtered_artifacts=matched_artifacts_1, filtered_results=matched_results_1)

    return


@phantom.playbook_block()
def fl_hostname(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):
    phantom.debug("fl_hostname() called")

    # collect filtered artifact ids and results for 'if' condition 1
    matched_artifacts_1, matched_results_1 = phantom.condition(
        container=container,
        conditions=[
            ["artifact:*.cef.host_name", "!=", ""]
        ],
        name="fl_hostname:condition_1",
        delimiter=None)

    # call connected blocks if filtered artifacts or results
    if matched_artifacts_1 or matched_results_1:
        fl_sir_number(action=action, success=success, container=container, results=results, handle=handle, filtered_artifacts=matched_artifacts_1, filtered_results=matched_results_1)

    return


@phantom.playbook_block()
def cf_mbs_retrieve_hostname_from_fqdn_1(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):
    phantom.debug("cf_mbs_retrieve_hostname_from_fqdn_1() called")

    filtered_artifact_0_data_fl_hostname = phantom.collect2(container=container, datapath=["filtered-data:FL_hostname:condition_1:artifact:*.cef.host_name","filtered-data:fl_hostname:condition_1:artifact:*.id"])

    parameters = []

    # build parameters list for 'cf_mbs_retrieve_hostname_from_fqdn_1' call
    for filtered_artifact_0_item_fl_hostname in filtered_artifact_0_data_fl_hostname:
        parameters.append({
            "fqdn": filtered_artifact_0_item_fl_hostname[0],
        })

    ################################################################################
    ## Custom Code Start
    ################################################################################
    # Write your custom code here...
    ################################################################################
    ## Custom Code End
    ################################################################################

    phantom.custom_function(custom_function="mbs/retrieve_hostname_from_FQDN", parameters=parameters, name="cf_mbs_retrieve_hostname_from_fqdn_1", callback=fl_hostname_not_none)

    return


@phantom.playbook_block()
def db_workstation_or_server(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):
    phantom.debug("db_workstation_or_server() called")

    # check for 'if' condition 1
    found_match_1 = phantom.decision(
        container=container,
        conditions=[
            ["filtered-data:FL_hostname:condition_1:artifact:*.cef.host_type", "==", "workstation"]
        ],
        delimiter=None)

    # call connected blocks if condition 1 matched
    if found_match_1:
        inc_fields_for_workstation(action=action, success=success, container=container, results=results, handle=handle)
        return

    # check for 'else' condition 2
    inc_fields_for_server(action=action, success=success, container=container, results=results, handle=handle)

    return


@phantom.playbook_block()
def inc_fields_for_workstation(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):
    phantom.debug("inc_fields_for_workstation() called")

    template = """{{\"parent\": \"{0}\", \"category\": \"Alert\", \"subcategory\": \"Application\", \"impact\": \"2\", \"urgency\": \"2\", \"assignment_group\": \"Global Security Operations Center\", \"assigned_to\": \"\", \"caller\": \"svc_csoc_soar\", \"location\": \"{1}\", \"description\": \"Run AV scan on {2}\"}}"""

    # parameter list for template variable replacement
    parameters = [
        "filtered-data:FL_SIR_number:condition_1:artifact:*.cef.snow_ticket_number",
        "filtered-data:FL_hostname:condition_1:artifact:*.cef.location",
        "cf_mbs_retrieve_hostname_from_fqdn_1:custom_function_result.data.host_name"
    ]

    ################################################################################
    ## Custom Code Start
    ################################################################################

    # Write your custom code here...

    ################################################################################
    ## Custom Code End
    ################################################################################

    phantom.format(container=container, template=template, parameters=parameters, name="inc_fields_for_workstation", separator=", ")

    inc_short_description_for_workstation(container=container)

    return


@phantom.playbook_block()
def inc_short_description_for_workstation(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):
    phantom.debug("inc_short_description_for_workstation() called")

    template = """CSOC - FireEye - Run AV scan on {0}"""

    # parameter list for template variable replacement
    parameters = [
        "cf_mbs_retrieve_hostname_from_fqdn_1:custom_function_result.data.host_name"
    ]

    ################################################################################
    ## Custom Code Start
    ################################################################################

    # Write your custom code here...

    ################################################################################
    ## Custom Code End
    ################################################################################

    phantom.format(container=container, template=template, parameters=parameters, name="inc_short_description_for_workstation", separator=", ")

    create_inc_for_workstation(container=container)

    return


@phantom.playbook_block()
def create_inc_for_workstation(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):
    phantom.debug("create_inc_for_workstation() called")

    # phantom.debug('Action: {0} {1}'.format(action['name'], ('SUCCEEDED' if success else 'FAILED')))

    inc_fields_for_workstation = phantom.get_format_data(name="inc_fields_for_workstation")
    inc_short_description_for_workstation = phantom.get_format_data(name="inc_short_description_for_workstation")

    parameters = []

    parameters.append({
        "table": "incident",
        "fields": inc_fields_for_workstation,
        "vault_id": "",
        "description": "",
        "short_description": inc_short_description_for_workstation,
    })

    ################################################################################
    ## Custom Code Start
    ################################################################################

    # Write your custom code here...

    ################################################################################
    ## Custom Code End
    ################################################################################

    phantom.act("create ticket", parameters=parameters, name="create_inc_for_workstation", assets=["snow_prod"], callback=scan_endpoint_2)

    return


@phantom.playbook_block()
def scan_endpoint_2(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):
    phantom.debug("scan_endpoint_2() called")

    # phantom.debug('Action: {0} {1}'.format(action['name'], ('SUCCEEDED' if success else 'FAILED')))

    cf_mbs_retrieve_hostname_from_fqdn_1__result = phantom.collect2(container=container, datapath=["cf_mbs_retrieve_hostname_from_fqdn_1:custom_function_result.data.host_name"])

    parameters = []

    # build parameters list for 'scan_endpoint_2' call
    for cf_mbs_retrieve_hostname_from_fqdn_1__result_item in cf_mbs_retrieve_hostname_from_fqdn_1__result:
        if cf_mbs_retrieve_hostname_from_fqdn_1__result_item[0] is not None:
            parameters.append({
                "hostname": cf_mbs_retrieve_hostname_from_fqdn_1__result_item[0],
                "operator": "StartsWith",
                "fileSizeLimit": 50,
            })

    ################################################################################
    ## Custom Code Start
    ################################################################################

    # Write your custom code here...

    ################################################################################
    ## Custom Code End
    ################################################################################

    phantom.act("scan endpoint", parameters=parameters, name="scan_endpoint_2", assets=["prod checkpoint"], callback=get_status_1)

    return


@phantom.playbook_block()
def fb_inc_created_workstation(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):
    phantom.debug("fb_inc_created_workstation() called")

    template = """INC created for AV scan: {0}"""

    # parameter list for template variable replacement
    parameters = [
        "create_inc_for_workstation:action_result.data.*.number"
    ]

    ################################################################################
    ## Custom Code Start
    ################################################################################

    # Write your custom code here...

    ################################################################################
    ## Custom Code End
    ################################################################################

    phantom.format(container=container, template=template, parameters=parameters, name="fb_inc_created_workstation", separator=", ")

    inc_created_for_workstation(container=container)

    return


@phantom.playbook_block()
def fb_email_body_workstation(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):
    phantom.debug("fb_email_body_workstation() called")

    template = """Hi Team,\n\nAV scan has been triggered for {0}.\nPlease check if the scan has commenced.\n\nAn INC has been created. Kindly furnish the rest of the mandatory fields in the INC in ServiceNow and submit.\n\nMonitor the progress of the scan, and update the ticket after the scan has been completed.\n\nSIR ticket: {1}\nINC ticket: {2}\nSOAR Event ID: {3}"""

    # parameter list for template variable replacement
    parameters = [
        "cf_mbs_retrieve_hostname_from_fqdn_1:custom_function_result.data.host_name",
        "filtered-data:FL_SIR_number:condition_1:artifact:*.cef.snow_ticket_number",
        "create_inc_for_workstation:action_result.data.*.number",
        "container:id"
    ]

    ################################################################################
    ## Custom Code Start
    ################################################################################

    # Write your custom code here...

    ################################################################################
    ## Custom Code End
    ################################################################################

    phantom.format(container=container, template=template, parameters=parameters, name="fb_email_body_workstation", separator=", ")

    send_email_1(container=container)

    return


@phantom.playbook_block()
def get_status_1(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):
    phantom.debug("get_status_1() called")

    # phantom.debug('Action: {0} {1}'.format(action['name'], ('SUCCEEDED' if success else 'FAILED')))

    scan_endpoint_2_result_data = phantom.collect2(container=container, datapath=["scan_endpoint_2:action_result.data.*.jobId","scan_endpoint_2:action_result.parameter.context.artifact_id"], action_results=results)

    parameters = []

    # build parameters list for 'get_status_1' call
    for scan_endpoint_2_result_item in scan_endpoint_2_result_data:
        if scan_endpoint_2_result_item[0] is not None:
            parameters.append({
                "jobId": scan_endpoint_2_result_item[0],
                "jobid": scan_endpoint_2_result_item[0],
                "context": {'artifact_id': scan_endpoint_2_result_item[1]},
            })

    ################################################################################
    ## Custom Code Start
    ################################################################################

    # Write your custom code here...

    ################################################################################
    ## Custom Code End
    ################################################################################

    phantom.act("get status", parameters=parameters, name="get_status_1", assets=["mbs prod checkpoint"], callback=fb_av_scan_status)

    return


@phantom.playbook_block()
def fb_av_scan_status(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):
    phantom.debug("fb_av_scan_status() called")

    template = """{{\"operationid\": \"{0}\", \"status\": \"{1}\", \"checkCount\": \"0\", \"hostname\": \"{2}\"}}"""

    # parameter list for template variable replacement
    parameters = [
        "get_status_1:action_result.data.*.data.id",
        "get_status_1:action_result.data.*.data.overallStatus",
        "cf_mbs_retrieve_hostname_from_fqdn_1:custom_function_result.data.host_name"
    ]

    ################################################################################
    ## Custom Code Start
    ################################################################################

    # Write your custom code here...

    ################################################################################
    ## Custom Code End
    ################################################################################

    phantom.format(container=container, template=template, parameters=parameters, name="fb_av_scan_status", separator=", ")

    add_artifact_1(container=container)

    return


@phantom.playbook_block()
def fl_sir_number(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):
    phantom.debug("fl_sir_number() called")

    # collect filtered artifact ids and results for 'if' condition 1
    matched_artifacts_1, matched_results_1 = phantom.condition(
        container=container,
        logical_operator="and",
        conditions=[
            ["artifact:*.cef.snow_ticket_number", "!=", ""],
            ["sir_ticket", "in", "artifact:*.label"]
        ],
        name="fl_sir_number:condition_1",
        delimiter=None)

    # call connected blocks if filtered artifacts or results
    if matched_artifacts_1 or matched_results_1:
        cf_mbs_retrieve_hostname_from_fqdn_1(action=action, success=success, container=container, results=results, handle=handle, filtered_artifacts=matched_artifacts_1, filtered_results=matched_results_1)

    return


@phantom.playbook_block()
def add_artifact_1(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):
    phantom.debug("add_artifact_1() called")

    # phantom.debug('Action: {0} {1}'.format(action['name'], ('SUCCEEDED' if success else 'FAILED')))

    fb_av_scan_status = phantom.get_format_data(name="fb_av_scan_status")

    parameters = []

    parameters.append({
        "name": "AV Scan",
        "label": "event",
        "cef_name": "",
        "contains": "",
        "cef_value": "",
        "container_id": "",
        "cef_dictionary": fb_av_scan_status,
        "run_automation": False,
        "source_data_identifier": "SANDS_FireEye_Malware_AV_Scan_Playbook",
    })

    ################################################################################
    ## Custom Code Start
    ################################################################################

    # Write your custom code here...

    ################################################################################
    ## Custom Code End
    ################################################################################

    phantom.act("add artifact", parameters=parameters, name="add_artifact_1", assets=["phantom"], callback=fb_inc_created_workstation)

    return


@phantom.playbook_block()
def fb_email_subject_workstation(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):
    phantom.debug("fb_email_subject_workstation() called")

    template = """[SOAR] {0}: {1}"""

    # parameter list for template variable replacement
    parameters = [
        "create_inc_for_workstation:action_result.data.*.number",
        "INC_Short_Description_for_workstation:formatted_data"
    ]

    ################################################################################
    ## Custom Code Start
    ################################################################################

    # Write your custom code here...

    ################################################################################
    ## Custom Code End
    ################################################################################

    phantom.format(container=container, template=template, parameters=parameters, name="fb_email_subject_workstation", separator=", ")

    fb_email_body_workstation(container=container)

    return


@phantom.playbook_block()
def inc_fields_for_server(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):
    phantom.debug("inc_fields_for_server() called")

    template = """{{\"parent\": \"{0}\", \"category\": \"Alert\", \"subcategory\": \"Application\", \"impact\": \"2\", \"urgency\": \"2\", \"assignment_group\": \"Singapore MBS System\", \"assigned_to\": \"\", \"caller\": \"svc_csoc_soar\", \"location\": \"Marina Bay Sands\", \"description\": \"\"}}"""

    # parameter list for template variable replacement
    parameters = [
        "filtered-data:FL_SIR_number:condition_1:artifact:*.cef.snow_ticket_number",
        "cf_mbs_retrieve_hostname_from_fqdn_1:custom_function_result.data.host_name"
    ]

    ################################################################################
    ## Custom Code Start
    ################################################################################

    # Write your custom code here...

    ################################################################################
    ## Custom Code End
    ################################################################################

    phantom.format(container=container, template=template, parameters=parameters, name="inc_fields_for_server", separator=", ")

    inc_short_description_for_server(container=container)

    return


@phantom.playbook_block()
def inc_created_for_workstation(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):
    phantom.debug("inc_created_for_workstation() called")

    fb_inc_created_workstation = phantom.get_format_data(name="fb_inc_created_workstation")

    ################################################################################
    ## Custom Code Start
    ################################################################################

    # Write your custom code here...

    ################################################################################
    ## Custom Code End
    ################################################################################

    phantom.add_note(container=container, content=fb_inc_created_workstation, note_format="html", title="INC created for workstation")

    av_scan_in_progress(container=container)

    return


@phantom.playbook_block()
def fl_hostname_not_none(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):
    phantom.debug("fl_hostname_not_none() called")

    # collect filtered artifact ids and results for 'if' condition 1
    matched_artifacts_1, matched_results_1 = phantom.condition(
        container=container,
        conditions=[
            ["cf_mbs_retrieve_hostname_from_fqdn_1:custom_function_result.data.host_name", "!=", None]
        ],
        name="fl_hostname_not_none:condition_1",
        delimiter=None)

    # call connected blocks if filtered artifacts or results
    if matched_artifacts_1 or matched_results_1:
        db_workstation_or_server(action=action, success=success, container=container, results=results, handle=handle, filtered_artifacts=matched_artifacts_1, filtered_results=matched_results_1)

    return


@phantom.playbook_block()
def av_scan_in_progress(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):
    phantom.debug("av_scan_in_progress() called")

    fb_inc_created_workstation = phantom.get_format_data(name="fb_inc_created_workstation")

    ################################################################################
    ## Custom Code Start
    ################################################################################

    # Write your custom code here...

    ################################################################################
    ## Custom Code End
    ################################################################################

    phantom.add_tags(container=container, tags="AV_scan_in_progress")
    phantom.add_note(container=container, content=fb_inc_created_workstation, note_format="html", title="INC created for workstation")

    fb_email_subject_workstation(container=container)

    return


@phantom.playbook_block()
def send_email_1(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):
    phantom.debug("send_email_1() called")

    # phantom.debug('Action: {0} {1}'.format(action['name'], ('SUCCEEDED' if success else 'FAILED')))

    fb_email_body_workstation = phantom.get_format_data(name="fb_email_body_workstation")
    fb_email_subject_workstation = phantom.get_format_data(name="fb_email_subject_workstation")

    parameters = []

    if fb_email_body_workstation is not None:
        parameters.append({
            "cc": "",
            "to": "csoc@sands.com",
            "bcc": "",
            "body": fb_email_body_workstation,
            "from": "csoc@sands.com",
            "headers": "",
            "subject": fb_email_subject_workstation,
            "attachments": "",
        })

    ################################################################################
    ## Custom Code Start
    ################################################################################

    # Write your custom code here...

    ################################################################################
    ## Custom Code End
    ################################################################################

    phantom.act("send email", parameters=parameters, name="send_email_1", assets=["internal email smtp"])

    return


@phantom.playbook_block()
def on_finish(container, summary):
    phantom.debug("on_finish() called")

    ################################################################################
    ## Custom Code Start
    ################################################################################

    # Write your custom code here...

    ################################################################################
    ## Custom Code End
    ################################################################################

    return