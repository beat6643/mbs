{
    "blockly": false,
    "blockly_xml": "<xml></xml>",
    "category": "UC2",
    "coa": {
        "data": {
            "description": "Ingest additional data into the container.",
            "edges": [
                {
                    "id": "port_25_to_port_36",
                    "sourceNode": "25",
                    "sourcePort": "25_out",
                    "targetNode": "36",
                    "targetPort": "36_in"
                },
                {
                    "conditions": [
                        {
                            "index": 1
                        }
                    ],
                    "id": "port_4_to_port_2",
                    "sourceNode": "4",
                    "sourcePort": "4_out",
                    "targetNode": "2",
                    "targetPort": "2_in"
                },
                {
                    "conditions": [
                        {
                            "index": 0
                        }
                    ],
                    "id": "port_34_to_port_35",
                    "sourceNode": "34",
                    "sourcePort": "34_out",
                    "targetNode": "35",
                    "targetPort": "35_in"
                },
                {
                    "id": "port_35_to_port_1",
                    "sourceNode": "35",
                    "sourcePort": "35_out",
                    "targetNode": "1",
                    "targetPort": "1_in"
                },
                {
                    "conditions": [
                        {
                            "index": 2
                        }
                    ],
                    "id": "port_4_to_port_15",
                    "sourceNode": "4",
                    "sourcePort": "4_out",
                    "targetNode": "15",
                    "targetPort": "15_in"
                },
                {
                    "id": "port_15_to_port_1",
                    "sourceNode": "15",
                    "sourcePort": "15_out",
                    "targetNode": "1",
                    "targetPort": "1_in"
                },
                {
                    "id": "port_19_to_port_20",
                    "sourceNode": "19",
                    "sourcePort": "19_out",
                    "targetNode": "20",
                    "targetPort": "20_in"
                },
                {
                    "id": "port_20_to_port_26",
                    "sourceNode": "20",
                    "sourcePort": "20_out",
                    "targetNode": "26",
                    "targetPort": "26_in"
                },
                {
                    "id": "port_36_to_port_38",
                    "sourceNode": "36",
                    "sourcePort": "36_out",
                    "targetNode": "38",
                    "targetPort": "38_in"
                },
                {
                    "conditions": [
                        {
                            "index": 1
                        }
                    ],
                    "id": "port_26_to_port_25",
                    "sourceNode": "26",
                    "sourcePort": "26_out",
                    "targetNode": "25",
                    "targetPort": "25_in"
                },
                {
                    "conditions": [
                        {
                            "index": 0
                        }
                    ],
                    "id": "port_2_to_port_3",
                    "sourceNode": "2",
                    "sourcePort": "2_out",
                    "targetNode": "3",
                    "targetPort": "3_in"
                },
                {
                    "conditions": [
                        {
                            "index": 0
                        }
                    ],
                    "id": "port_3_to_port_34",
                    "sourceNode": "3",
                    "sourcePort": "3_out",
                    "targetNode": "34",
                    "targetPort": "34_in"
                },
                {
                    "conditions": [
                        {
                            "index": 0
                        }
                    ],
                    "id": "port_26_to_port_37",
                    "sourceNode": "26",
                    "sourcePort": "26_out",
                    "targetNode": "37",
                    "targetPort": "37_in"
                },
                {
                    "id": "port_37_to_port_31",
                    "sourceNode": "37",
                    "sourcePort": "37_out",
                    "targetNode": "31",
                    "targetPort": "31_in"
                },
                {
                    "conditions": [
                        {
                            "index": 0
                        }
                    ],
                    "id": "port_31_to_port_30",
                    "sourceNode": "31",
                    "sourcePort": "31_out",
                    "targetNode": "30",
                    "targetPort": "30_in"
                },
                {
                    "id": "port_30_to_port_14",
                    "sourceNode": "30",
                    "sourcePort": "30_out",
                    "targetNode": "14",
                    "targetPort": "14_in"
                },
                {
                    "id": "port_14_to_port_1",
                    "sourceNode": "14",
                    "sourcePort": "14_out",
                    "targetNode": "1",
                    "targetPort": "1_in"
                },
                {
                    "id": "port_38_to_port_33",
                    "sourceNode": "38",
                    "sourcePort": "38_out",
                    "targetNode": "33",
                    "targetPort": "33_in"
                },
                {
                    "id": "port_33_to_port_9",
                    "sourceNode": "33",
                    "sourcePort": "33_out",
                    "targetNode": "9",
                    "targetPort": "9_in"
                },
                {
                    "id": "port_9_to_port_1",
                    "sourceNode": "9",
                    "sourcePort": "9_out",
                    "targetNode": "1",
                    "targetPort": "1_in"
                },
                {
                    "id": "port_0_to_port_4",
                    "sourceNode": "0",
                    "sourcePort": "0_out",
                    "targetNode": "4",
                    "targetPort": "4_in"
                },
                {
                    "conditions": [
                        {
                            "index": 0
                        }
                    ],
                    "id": "port_8_to_port_28",
                    "sourceNode": "8",
                    "sourcePort": "8_out",
                    "targetNode": "28",
                    "targetPort": "28_in"
                },
                {
                    "conditions": [
                        {
                            "index": 1
                        }
                    ],
                    "id": "port_8_to_port_27",
                    "sourceNode": "8",
                    "sourcePort": "8_out",
                    "targetNode": "27",
                    "targetPort": "27_in"
                },
                {
                    "conditions": [
                        {
                            "index": 3
                        }
                    ],
                    "id": "port_8_to_port_29",
                    "sourceNode": "8",
                    "sourcePort": "8_out",
                    "targetNode": "29",
                    "targetPort": "29_in"
                },
                {
                    "conditions": [
                        {
                            "index": 2
                        }
                    ],
                    "id": "port_8_to_port_32",
                    "sourceNode": "8",
                    "sourcePort": "8_out",
                    "targetNode": "32",
                    "targetPort": "32_in"
                },
                {
                    "conditions": [
                        {
                            "index": 1
                        }
                    ],
                    "id": "port_4_to_port_7",
                    "sourceNode": "4",
                    "sourcePort": "4_out",
                    "targetNode": "7",
                    "targetPort": "7_in"
                },
                {
                    "conditions": [
                        {
                            "index": 0
                        }
                    ],
                    "id": "port_7_to_port_6",
                    "sourceNode": "7",
                    "sourcePort": "7_out",
                    "targetNode": "6",
                    "targetPort": "6_in"
                },
                {
                    "conditions": [
                        {
                            "index": 0
                        }
                    ],
                    "id": "port_6_to_port_39",
                    "sourceNode": "6",
                    "sourcePort": "6_out",
                    "targetNode": "39",
                    "targetPort": "39_in"
                },
                {
                    "id": "port_21_to_port_24",
                    "sourceNode": "21",
                    "sourcePort": "21_out",
                    "targetNode": "24",
                    "targetPort": "24_in"
                },
                {
                    "id": "port_39_to_port_23",
                    "sourceNode": "39",
                    "sourcePort": "39_out",
                    "targetNode": "23",
                    "targetPort": "23_in"
                },
                {
                    "id": "port_17_to_port_16",
                    "sourceNode": "17",
                    "sourcePort": "17_out",
                    "targetNode": "16",
                    "targetPort": "16_in"
                },
                {
                    "id": "port_16_to_port_1",
                    "sourceNode": "16",
                    "sourcePort": "16_out",
                    "targetNode": "1",
                    "targetPort": "1_in"
                },
                {
                    "id": "port_24_to_port_8",
                    "sourceNode": "24",
                    "sourcePort": "24_out",
                    "targetNode": "8",
                    "targetPort": "8_in"
                },
                {
                    "id": "port_23_to_port_8",
                    "sourceNode": "23",
                    "sourcePort": "23_out",
                    "targetNode": "8",
                    "targetPort": "8_in"
                },
                {
                    "id": "port_32_to_port_10",
                    "sourceNode": "32",
                    "sourcePort": "32_out",
                    "targetNode": "10",
                    "targetPort": "10_in"
                },
                {
                    "id": "port_29_to_port_11",
                    "sourceNode": "29",
                    "sourcePort": "29_out",
                    "targetNode": "11",
                    "targetPort": "11_in"
                },
                {
                    "id": "port_28_to_port_12",
                    "sourceNode": "28",
                    "sourcePort": "28_out",
                    "targetNode": "12",
                    "targetPort": "12_in"
                },
                {
                    "id": "port_27_to_port_13",
                    "sourceNode": "27",
                    "sourcePort": "27_out",
                    "targetNode": "13",
                    "targetPort": "13_in"
                },
                {
                    "id": "port_10_to_port_1",
                    "sourceNode": "10",
                    "sourcePort": "10_out",
                    "targetNode": "1",
                    "targetPort": "1_in"
                },
                {
                    "id": "port_11_to_port_1",
                    "sourceNode": "11",
                    "sourcePort": "11_out",
                    "targetNode": "1",
                    "targetPort": "1_in"
                },
                {
                    "id": "port_12_to_port_1",
                    "sourceNode": "12",
                    "sourcePort": "12_out",
                    "targetNode": "1",
                    "targetPort": "1_in"
                },
                {
                    "id": "port_13_to_port_1",
                    "sourceNode": "13",
                    "sourcePort": "13_out",
                    "targetNode": "1",
                    "targetPort": "1_in"
                },
                {
                    "id": "port_18_to_port_17",
                    "sourceNode": "18",
                    "sourcePort": "18_out",
                    "targetNode": "17",
                    "targetPort": "17_in"
                },
                {
                    "conditions": [
                        {
                            "index": 0
                        }
                    ],
                    "id": "port_4_to_port_5",
                    "sourceNode": "4",
                    "sourcePort": "4_out",
                    "targetNode": "5",
                    "targetPort": "5_in"
                },
                {
                    "conditions": [
                        {
                            "index": 0
                        }
                    ],
                    "id": "port_5_to_port_18",
                    "sourceNode": "5",
                    "sourcePort": "5_out",
                    "targetNode": "18",
                    "targetPort": "18_in"
                },
                {
                    "conditions": [
                        {
                            "index": 1
                        }
                    ],
                    "id": "port_6_to_port_21",
                    "sourceNode": "6",
                    "sourcePort": "6_out",
                    "targetNode": "21",
                    "targetPort": "21_in"
                },
                {
                    "conditions": [
                        {
                            "index": 2
                        }
                    ],
                    "id": "port_6_to_port_22",
                    "sourceNode": "6",
                    "sourcePort": "6_out",
                    "targetNode": "22",
                    "targetPort": "22_in"
                },
                {
                    "id": "port_22_to_port_8",
                    "sourceNode": "22",
                    "sourcePort": "22_out",
                    "targetNode": "8",
                    "targetPort": "8_in"
                },
                {
                    "conditions": [
                        {
                            "index": 1
                        }
                    ],
                    "id": "port_34_to_port_19",
                    "sourceNode": "34",
                    "sourcePort": "34_out",
                    "targetNode": "19",
                    "targetPort": "19_in"
                }
            ],
            "hash": "bfc7d2b4b58ffb17ad09a8ca65a4a7fd2ef13a46",
            "nodes": {
                "0": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "functionName": "on_start",
                        "id": "0",
                        "type": "start"
                    },
                    "errors": {},
                    "id": "0",
                    "type": "start",
                    "warnings": {},
                    "x": 680,
                    "y": -20.000000000000227
                },
                "1": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "functionName": "on_finish",
                        "id": "1",
                        "type": "end"
                    },
                    "errors": {},
                    "id": "1",
                    "type": "end",
                    "warnings": {},
                    "x": 640,
                    "y": 2380
                },
                "10": {
                    "data": {
                        "action": "update artifact",
                        "actionType": "generic",
                        "advanced": {
                            "join": [],
                            "scope": "all"
                        },
                        "connector": "Phantom",
                        "connectorConfigs": [
                            "phantom"
                        ],
                        "connectorId": "deb82aa9-22cc-4675-9cf1-534b8d006eb7",
                        "connectorVersion": "v1",
                        "functionId": 5,
                        "functionName": "update_artifact_5",
                        "id": "10",
                        "parameters": {
                            "artifact_id": "filtered-data:FL_Host_Artifact_2:condition_1:artifact:*.id",
                            "artifact_json": "",
                            "cef_json": "format_9:formatted_data",
                            "cef_types_json": "",
                            "label": "",
                            "name": "",
                            "overwrite": "",
                            "severity": "",
                            "tags": ""
                        },
                        "requiredParameters": [
                            {
                                "data_type": "string",
                                "field": "artifact_id"
                            }
                        ],
                        "type": "action"
                    },
                    "errors": {},
                    "id": "10",
                    "type": "action",
                    "warnings": {},
                    "x": 2160,
                    "y": 2160
                },
                "11": {
                    "data": {
                        "action": "update artifact",
                        "actionType": "generic",
                        "advanced": {
                            "join": [],
                            "scope": "all"
                        },
                        "connector": "Phantom",
                        "connectorConfigs": [
                            "phantom"
                        ],
                        "connectorId": "deb82aa9-22cc-4675-9cf1-534b8d006eb7",
                        "connectorVersion": "v1",
                        "functionId": 6,
                        "functionName": "update_artifact_6",
                        "id": "11",
                        "parameters": {
                            "artifact_id": "filtered-data:FL_Host_Artifact_2:condition_1:artifact:*.id",
                            "artifact_json": "",
                            "cef_json": "format_6:formatted_data",
                            "cef_types_json": "",
                            "label": "",
                            "name": "",
                            "overwrite": "",
                            "severity": "",
                            "tags": ""
                        },
                        "requiredParameters": [
                            {
                                "data_type": "string",
                                "field": "artifact_id"
                            }
                        ],
                        "type": "action"
                    },
                    "errors": {},
                    "id": "11",
                    "type": "action",
                    "warnings": {},
                    "x": 1260,
                    "y": 2160
                },
                "12": {
                    "data": {
                        "action": "update artifact",
                        "actionType": "generic",
                        "advanced": {
                            "join": [],
                            "scope": "all"
                        },
                        "connector": "Phantom",
                        "connectorConfigs": [
                            "phantom"
                        ],
                        "connectorId": "deb82aa9-22cc-4675-9cf1-534b8d006eb7",
                        "connectorVersion": "v1",
                        "functionId": 7,
                        "functionName": "update_artifact_7",
                        "id": "12",
                        "parameters": {
                            "artifact_id": "filtered-data:FL_Host_Artifact_2:condition_1:artifact:*.id",
                            "artifact_json": "",
                            "cef_json": "format_7:formatted_data",
                            "cef_types_json": "",
                            "label": "",
                            "name": "",
                            "overwrite": "",
                            "severity": "",
                            "tags": ""
                        },
                        "requiredParameters": [
                            {
                                "data_type": "string",
                                "field": "artifact_id"
                            }
                        ],
                        "type": "action"
                    },
                    "errors": {},
                    "id": "12",
                    "type": "action",
                    "warnings": {},
                    "x": 1520,
                    "y": 2160
                },
                "13": {
                    "data": {
                        "action": "update artifact",
                        "actionType": "generic",
                        "advanced": {
                            "join": [],
                            "scope": "all"
                        },
                        "connector": "Phantom",
                        "connectorConfigs": [
                            "phantom"
                        ],
                        "connectorId": "deb82aa9-22cc-4675-9cf1-534b8d006eb7",
                        "connectorVersion": "v1",
                        "functionId": 8,
                        "functionName": "update_artifact_8",
                        "id": "13",
                        "parameters": {
                            "artifact_id": "filtered-data:FL_Host_Artifact_2:condition_1:artifact:*.id",
                            "artifact_json": "",
                            "cef_json": "format_8:formatted_data",
                            "cef_types_json": "",
                            "label": "",
                            "name": "",
                            "overwrite": "",
                            "severity": "",
                            "tags": ""
                        },
                        "requiredParameters": [
                            {
                                "data_type": "string",
                                "field": "artifact_id"
                            }
                        ],
                        "type": "action"
                    },
                    "errors": {},
                    "id": "13",
                    "type": "action",
                    "warnings": {},
                    "x": 1860,
                    "y": 2160
                },
                "14": {
                    "data": {
                        "action": "update artifact",
                        "actionType": "generic",
                        "advanced": {
                            "customName": "ph_update_artifact_host_name_2",
                            "customNameId": 0,
                            "delayTime": 0,
                            "join": [],
                            "scope": "all"
                        },
                        "connector": "Phantom",
                        "connectorConfigs": [
                            "phantom"
                        ],
                        "connectorId": "deb82aa9-22cc-4675-9cf1-534b8d006eb7",
                        "connectorVersion": "v1",
                        "functionId": 1,
                        "functionName": "ph_update_artifact_host_name_2",
                        "id": "14",
                        "parameters": {
                            "artifact_id": "filtered-data:FL_Host_Artifact:condition_1:artifact:*.id",
                            "artifact_json": "",
                            "cef_json": "fb_update_artifact_host_name_2:formatted_data",
                            "cef_types_json": "",
                            "label": "",
                            "name": "",
                            "overwrite": "",
                            "severity": "",
                            "tags": ""
                        },
                        "requiredParameters": [
                            {
                                "data_type": "string",
                                "field": "artifact_id"
                            }
                        ],
                        "type": "action"
                    },
                    "errors": {},
                    "id": "14",
                    "type": "action",
                    "warnings": {},
                    "x": 380,
                    "y": 2160
                },
                "15": {
                    "data": {
                        "advanced": {
                            "customName": "api_add_comment_client_ip_not_exist",
                            "customNameId": 0,
                            "join": []
                        },
                        "functionId": 3,
                        "functionName": "api_add_comment_client_ip_not_exist",
                        "id": "15",
                        "type": "utility",
                        "utilities": {
                            "comment": {
                                "description": "",
                                "fields": [
                                    {
                                        "description": "",
                                        "label": "comment",
                                        "name": "comment",
                                        "placeholder": "Enter a comment",
                                        "renderType": "datapath",
                                        "required": true
                                    },
                                    {
                                        "hidden": true,
                                        "name": "container",
                                        "required": false
                                    },
                                    {
                                        "hidden": true,
                                        "name": "author",
                                        "required": false
                                    },
                                    {
                                        "hidden": true,
                                        "name": "trace",
                                        "required": false
                                    }
                                ],
                                "label": "add comment",
                                "name": "comment"
                            }
                        },
                        "values": {
                            "comment": {
                                "_internal": [
                                    "container",
                                    "author",
                                    "trace"
                                ],
                                "comment": "Client IP doesn't exist in the Alert Event."
                            }
                        }
                    },
                    "errors": {},
                    "id": "15",
                    "tab": "apis",
                    "type": "utility",
                    "warnings": {},
                    "x": -140,
                    "y": 2140
                },
                "16": {
                    "data": {
                        "advanced": {
                            "customName": "pin_hud_proxy_dns_ip",
                            "customNameId": 0,
                            "join": []
                        },
                        "functionId": 5,
                        "functionName": "pin_hud_proxy_dns_ip",
                        "id": "16",
                        "type": "utility",
                        "utilities": {
                            "pin": {
                                "description": "",
                                "fields": [
                                    {
                                        "description": "",
                                        "label": "message",
                                        "name": "message",
                                        "placeholder": "Enter a message",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "description": "",
                                        "label": "data",
                                        "name": "data",
                                        "placeholder": "Enter a value",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "choices": [
                                            "card",
                                            "data"
                                        ],
                                        "description": "",
                                        "label": "pin type",
                                        "name": "pin_type",
                                        "placeholder": "Select pin type",
                                        "renderType": "dropdown",
                                        "required": false
                                    },
                                    {
                                        "choices": [
                                            "grey",
                                            "blue",
                                            "red"
                                        ],
                                        "description": "",
                                        "label": "pin color",
                                        "name": "pin_style",
                                        "placeholder": "Select pin color",
                                        "renderType": "dropdown",
                                        "required": false
                                    },
                                    {
                                        "description": "",
                                        "label": "name",
                                        "name": "name",
                                        "placeholder": "Use a named pin",
                                        "renderType": "input",
                                        "required": false
                                    },
                                    {
                                        "hidden": true,
                                        "name": "container",
                                        "required": false
                                    },
                                    {
                                        "hidden": true,
                                        "name": "author",
                                        "required": false
                                    },
                                    {
                                        "hidden": true,
                                        "name": "truncate",
                                        "required": false
                                    },
                                    {
                                        "hidden": true,
                                        "name": "trace",
                                        "required": false
                                    }
                                ],
                                "label": "pin",
                                "name": "pin"
                            }
                        },
                        "values": {
                            "pin": {
                                "_internal": [
                                    "container",
                                    "author",
                                    "truncate",
                                    "trace"
                                ],
                                "data": "Client IP is DNS/Proxy. Please identify the actual Client IP.",
                                "message": "Manual intervention required",
                                "name": "",
                                "pin_style": "red",
                                "pin_type": "card"
                            }
                        }
                    },
                    "errors": {},
                    "id": "16",
                    "tab": "apis",
                    "type": "utility",
                    "warnings": {},
                    "x": 60,
                    "y": 1360
                },
                "17": {
                    "data": {
                        "advanced": {
                            "customName": "api_add_tag_manual_intervention",
                            "customNameId": 0,
                            "join": []
                        },
                        "functionId": 4,
                        "functionName": "api_add_tag_manual_intervention",
                        "id": "17",
                        "type": "utility",
                        "utilities": {
                            "add_note": {
                                "description": "",
                                "fields": [
                                    {
                                        "description": "",
                                        "label": "title",
                                        "name": "title",
                                        "placeholder": "Enter a note title",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "description": "",
                                        "label": "content",
                                        "name": "content",
                                        "placeholder": "Enter the note content",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "choices": [
                                            "markdown",
                                            "html"
                                        ],
                                        "default": "markdown",
                                        "description": "",
                                        "label": "note format",
                                        "name": "note_format",
                                        "placeholder": "Enter the note content",
                                        "renderType": "dropdown",
                                        "required": false
                                    },
                                    {
                                        "hidden": true,
                                        "name": "container",
                                        "required": false
                                    },
                                    {
                                        "default": "general",
                                        "hidden": true,
                                        "name": "note_type",
                                        "required": false
                                    },
                                    {
                                        "hidden": true,
                                        "name": "author",
                                        "required": false
                                    },
                                    {
                                        "hidden": true,
                                        "name": "event_id",
                                        "required": false
                                    },
                                    {
                                        "hidden": true,
                                        "name": "task_id",
                                        "required": false
                                    },
                                    {
                                        "hidden": true,
                                        "name": "trace",
                                        "required": false
                                    }
                                ],
                                "label": "add note",
                                "name": "add_note"
                            },
                            "add_tags": {
                                "description": "",
                                "fields": [
                                    {
                                        "choices": "tags",
                                        "description": "",
                                        "label": "tag",
                                        "name": "tags",
                                        "placeholder": "Enter a tag",
                                        "renderType": "combobox",
                                        "required": true
                                    },
                                    {
                                        "hidden": true,
                                        "name": "container",
                                        "required": false
                                    },
                                    {
                                        "hidden": true,
                                        "name": "trace",
                                        "required": false
                                    }
                                ],
                                "label": "add tag",
                                "name": "add_tags",
                                "refreshNotableData": true
                            }
                        },
                        "values": {
                            "add_note": {
                                "_internal": [
                                    "container",
                                    "note_type",
                                    "author",
                                    "event_id",
                                    "task_id",
                                    "trace"
                                ],
                                "content": "FB_Client_IP_Is_Proxy_IP:formatted_data",
                                "note_format": "html",
                                "title": "Client IP is Proxy/DNS IP"
                            },
                            "add_tags": {
                                "_internal": [
                                    "container",
                                    "trace"
                                ],
                                "tags": "manual_intervention_required"
                            }
                        }
                    },
                    "errors": {},
                    "id": "17",
                    "tab": "apis",
                    "type": "utility",
                    "warnings": {},
                    "x": 60,
                    "y": 1000
                },
                "18": {
                    "data": {
                        "advanced": {
                            "customName": "fb_client_ip_is_proxy_ip",
                            "customNameId": 0,
                            "join": [],
                            "separator": ", "
                        },
                        "functionId": 12,
                        "functionName": "fb_client_ip_is_proxy_ip",
                        "id": "18",
                        "parameters": [
                            "filtered-data:FL_Client_IP:condition_1:artifact:*.cef.sourceAddress"
                        ],
                        "template": "The Client IP :{0} is found to be in the Proxy/DNS IP list. So the analyst need to manually investigate thsi incident.",
                        "type": "format"
                    },
                    "errors": {},
                    "id": "18",
                    "type": "format",
                    "warnings": {},
                    "x": 60,
                    "y": 840
                },
                "19": {
                    "data": {
                        "advanced": {
                            "customName": "fb_spl_query_find_shost",
                            "customNameId": 0,
                            "join": [],
                            "separator": ", "
                        },
                        "functionId": 3,
                        "functionName": "fb_spl_query_find_shost",
                        "id": "19",
                        "parameters": [
                            "filtered-data:FL_Client_IP_Artifact:condition_1:artifact:*.cef.sourceAddress"
                        ],
                        "template": "index=security sourcetype=\"fsctcenter_avp\" {0} \"Hostname:\" NOT (\"Hostname: Irresolvable\") earliest=-15m\n| dedup sourcetype",
                        "type": "format"
                    },
                    "errors": {},
                    "id": "19",
                    "type": "format",
                    "warnings": {},
                    "x": 520,
                    "y": 840
                },
                "2": {
                    "data": {
                        "advanced": {
                            "customName": "fl_client_ip_artifact",
                            "customNameId": 0,
                            "join": []
                        },
                        "conditions": [
                            {
                                "comparisons": [
                                    {
                                        "conditionIndex": 0,
                                        "op": "!=",
                                        "param": "artifact:*.cef.sourceAddress",
                                        "value": ""
                                    },
                                    {
                                        "conditionIndex": 0,
                                        "op": "in",
                                        "param": "client_ip",
                                        "value": "artifact:*.tags"
                                    }
                                ],
                                "conditionIndex": 0,
                                "logic": "and"
                            }
                        ],
                        "functionId": 3,
                        "functionName": "fl_client_ip_artifact",
                        "id": "2",
                        "type": "filter"
                    },
                    "errors": {},
                    "id": "2",
                    "type": "filter",
                    "warnings": {},
                    "x": 580,
                    "y": 320
                },
                "20": {
                    "data": {
                        "action": "run query",
                        "actionType": "investigate",
                        "advanced": {
                            "customName": "sppl_query_find_shost",
                            "customNameId": 0,
                            "join": []
                        },
                        "connector": "Splunk",
                        "connectorConfigs": [
                            "splunk prod"
                        ],
                        "connectorId": "91883aa8-9c81-470b-97a1-5d8f7995f560",
                        "connectorVersion": "v1",
                        "functionId": 3,
                        "functionName": "sppl_query_find_shost",
                        "id": "20",
                        "parameters": {
                            "command": "search",
                            "display": "",
                            "parse_only": "",
                            "query": "FB_SPL_Query_Find_shost:formatted_data"
                        },
                        "requiredParameters": [
                            {
                                "data_type": "string",
                                "field": "query"
                            }
                        ],
                        "type": "action"
                    },
                    "errors": {},
                    "id": "20",
                    "type": "action",
                    "warnings": {},
                    "x": 520,
                    "y": 1020
                },
                "21": {
                    "data": {
                        "advanced": {
                            "join": [],
                            "separator": ", "
                        },
                        "functionId": 11,
                        "functionName": "format_11",
                        "id": "21",
                        "parameters": [
                            "container:id"
                        ],
                        "template": "{{\"host_type\": \"workstation\"}}",
                        "type": "format"
                    },
                    "errors": {},
                    "id": "21",
                    "type": "format",
                    "warnings": {},
                    "x": 1960,
                    "y": 820
                },
                "22": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "functionId": 6,
                        "functionName": "add_comment_6",
                        "id": "22",
                        "type": "utility",
                        "utilities": {
                            "comment": {
                                "description": "",
                                "fields": [
                                    {
                                        "description": "",
                                        "label": "comment",
                                        "name": "comment",
                                        "placeholder": "Enter a comment",
                                        "renderType": "datapath",
                                        "required": true
                                    },
                                    {
                                        "hidden": true,
                                        "name": "container",
                                        "required": false
                                    },
                                    {
                                        "hidden": true,
                                        "name": "author",
                                        "required": false
                                    },
                                    {
                                        "hidden": true,
                                        "name": "trace",
                                        "required": false
                                    }
                                ],
                                "label": "add comment",
                                "name": "comment"
                            }
                        },
                        "values": {
                            "comment": {
                                "_internal": [
                                    "container",
                                    "author",
                                    "trace"
                                ],
                                "comment": "Host OS Name is empty. Hence can't find Host OS Type"
                            }
                        }
                    },
                    "errors": {},
                    "id": "22",
                    "tab": "apis",
                    "type": "utility",
                    "warnings": {},
                    "x": 1260,
                    "y": 1020
                },
                "23": {
                    "data": {
                        "action": "update artifact",
                        "actionType": "generic",
                        "advanced": {
                            "delayTime": 0,
                            "join": [],
                            "scope": "all"
                        },
                        "connector": "Phantom",
                        "connectorConfigs": [
                            "phantom"
                        ],
                        "connectorId": "deb82aa9-22cc-4675-9cf1-534b8d006eb7",
                        "connectorVersion": "v1",
                        "functionId": 4,
                        "functionName": "update_artifact_4",
                        "id": "23",
                        "parameters": {
                            "artifact_id": "filtered-data:FL_Host_Artifact_2:condition_1:artifact:*.id",
                            "artifact_json": "",
                            "cef_json": "format_10:formatted_data",
                            "cef_types_json": "",
                            "label": "",
                            "name": "",
                            "overwrite": "",
                            "severity": "",
                            "tags": ""
                        },
                        "requiredParameters": [
                            {
                                "data_type": "string",
                                "field": "artifact_id"
                            }
                        ],
                        "type": "action"
                    },
                    "errors": {},
                    "id": "23",
                    "type": "action",
                    "warnings": {},
                    "x": 1660,
                    "y": 1020
                },
                "24": {
                    "data": {
                        "action": "update artifact",
                        "actionType": "generic",
                        "advanced": {
                            "join": [],
                            "scope": "all"
                        },
                        "connector": "Phantom",
                        "connectorConfigs": [
                            "phantom"
                        ],
                        "connectorId": "deb82aa9-22cc-4675-9cf1-534b8d006eb7",
                        "connectorVersion": "v1",
                        "functionId": 3,
                        "functionName": "update_artifact_3",
                        "id": "24",
                        "parameters": {
                            "artifact_id": "filtered-data:FL_Host_Artifact_2:condition_1:artifact:*.id",
                            "artifact_json": "",
                            "cef_json": "format_11:formatted_data",
                            "cef_types_json": "",
                            "label": "",
                            "name": "",
                            "overwrite": "",
                            "severity": "",
                            "tags": ""
                        },
                        "requiredParameters": [
                            {
                                "data_type": "string",
                                "field": "artifact_id"
                            }
                        ],
                        "type": "action"
                    },
                    "errors": {},
                    "id": "24",
                    "type": "action",
                    "warnings": {},
                    "x": 1960,
                    "y": 1020
                },
                "25": {
                    "data": {
                        "advanced": {
                            "customName": "fb_nslookup_format_query",
                            "customNameId": 0,
                            "drop_none": true,
                            "join": [],
                            "scope": "all",
                            "separator": ", "
                        },
                        "functionId": 2,
                        "functionName": "fb_nslookup_format_query",
                        "id": "25",
                        "parameters": [
                            "filtered-data:FL_Client_IP_Artifact:condition_1:artifact:*.cef.sourceAddress"
                        ],
                        "template": "%%\nnslookup \"{0}\"\n%%",
                        "type": "format"
                    },
                    "errors": {},
                    "id": "25",
                    "type": "format",
                    "warnings": {},
                    "x": 720,
                    "y": 1360
                },
                "26": {
                    "data": {
                        "advanced": {
                            "customName": "db_spl_is_shost_found",
                            "customNameId": 0,
                            "join": []
                        },
                        "conditions": [
                            {
                                "comparisons": [
                                    {
                                        "conditionIndex": 0,
                                        "op": "!=",
                                        "param": "sppl_query_find_shost:action_result.summary.total_events",
                                        "value": "0"
                                    }
                                ],
                                "conditionIndex": 0,
                                "display": "If",
                                "logic": "and",
                                "type": "if"
                            },
                            {
                                "comparisons": [
                                    {
                                        "conditionIndex": 1,
                                        "op": "==",
                                        "param": "",
                                        "value": ""
                                    }
                                ],
                                "conditionIndex": 1,
                                "display": "Else",
                                "logic": "and",
                                "type": "else"
                            }
                        ],
                        "functionId": 5,
                        "functionName": "db_spl_is_shost_found",
                        "id": "26",
                        "type": "decision"
                    },
                    "errors": {},
                    "id": "26",
                    "type": "decision",
                    "warnings": {},
                    "x": 600,
                    "y": 1180
                },
                "27": {
                    "data": {
                        "advanced": {
                            "join": [],
                            "separator": ", "
                        },
                        "functionId": 8,
                        "functionName": "format_8",
                        "id": "27",
                        "parameters": [
                            "container:id"
                        ],
                        "template": "{{\"property_location\": \" - SCL\", \"location\": \" \"}}",
                        "type": "format"
                    },
                    "errors": {},
                    "id": "27",
                    "type": "format",
                    "warnings": {},
                    "x": 1860,
                    "y": 1360
                },
                "28": {
                    "data": {
                        "advanced": {
                            "join": [],
                            "separator": ", "
                        },
                        "functionId": 7,
                        "functionName": "format_7",
                        "id": "28",
                        "parameters": [
                            "container:id"
                        ],
                        "template": "{{\"property_location\": \" - MBS\", \"location\": \"Marina Bay Sands\"}}",
                        "type": "format"
                    },
                    "errors": {},
                    "id": "28",
                    "type": "format",
                    "warnings": {},
                    "x": 1520,
                    "y": 1360
                },
                "29": {
                    "data": {
                        "advanced": {
                            "join": [],
                            "separator": ", "
                        },
                        "functionId": 6,
                        "functionName": "format_6",
                        "id": "29",
                        "parameters": [
                            "container:id"
                        ],
                        "template": "{{\"property_location\": \" \", \"location\": \" \"}}",
                        "type": "format"
                    },
                    "errors": {},
                    "id": "29",
                    "type": "format",
                    "warnings": {},
                    "x": 1260,
                    "y": 1360
                },
                "3": {
                    "data": {
                        "advanced": {
                            "customName": "fl_host_artifact",
                            "customNameId": 0,
                            "join": []
                        },
                        "conditions": [
                            {
                                "comparisons": [
                                    {
                                        "conditionIndex": 0,
                                        "op": "==",
                                        "param": "artifact:*.name",
                                        "value": "Host Artifact"
                                    }
                                ],
                                "conditionIndex": 0,
                                "logic": "and"
                            }
                        ],
                        "functionId": 4,
                        "functionName": "fl_host_artifact",
                        "id": "3",
                        "type": "filter"
                    },
                    "errors": {},
                    "id": "3",
                    "type": "filter",
                    "warnings": {},
                    "x": 580,
                    "y": 480
                },
                "30": {
                    "data": {
                        "advanced": {
                            "customName": "fb_update_artifact_host_name_2",
                            "customNameId": 0,
                            "drop_none": true,
                            "join": [],
                            "scope": "all",
                            "separator": ", "
                        },
                        "functionId": 4,
                        "functionName": "fb_update_artifact_host_name_2",
                        "id": "30",
                        "parameters": [
                            "cf_mbs_extract_regex_from_list_2:custom_function_result.data.output_item"
                        ],
                        "template": "{{\"host_name\": \"{0}\"}}",
                        "type": "format"
                    },
                    "errors": {},
                    "id": "30",
                    "type": "format",
                    "warnings": {},
                    "x": 380,
                    "y": 1720
                },
                "31": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "conditions": [
                            {
                                "comparisons": [
                                    {
                                        "conditionIndex": 0,
                                        "op": "!=",
                                        "param": "cf_mbs_extract_regex_from_list_2:custom_function_result.data.output_item",
                                        "value": ""
                                    }
                                ],
                                "conditionIndex": 0,
                                "display": "If",
                                "logic": "and",
                                "type": "if"
                            }
                        ],
                        "functionId": 7,
                        "functionName": "decision_7",
                        "id": "31",
                        "type": "decision"
                    },
                    "errors": {},
                    "id": "31",
                    "type": "decision",
                    "warnings": {},
                    "x": 460,
                    "y": 1520
                },
                "32": {
                    "data": {
                        "advanced": {
                            "join": [],
                            "separator": ", "
                        },
                        "functionId": 9,
                        "functionName": "format_9",
                        "id": "32",
                        "parameters": [
                            "container:id"
                        ],
                        "template": "{{\"property_location\": \" - CORP\", \"location\": \"The Venetian / Palazzo Las Vegas\"}}",
                        "type": "format"
                    },
                    "errors": {},
                    "id": "32",
                    "type": "format",
                    "warnings": {},
                    "x": 2160,
                    "y": 1360
                },
                "33": {
                    "data": {
                        "advanced": {
                            "drop_none": true,
                            "join": [],
                            "scope": "all",
                            "separator": ", "
                        },
                        "functionId": 5,
                        "functionName": "format_5",
                        "id": "33",
                        "parameters": [
                            "cf_mbs_extract_regex_from_list_1:custom_function_result.data.output_item"
                        ],
                        "template": "{{\"host_name\": \"{0}\"}}",
                        "type": "format"
                    },
                    "errors": {},
                    "id": "33",
                    "type": "format",
                    "warnings": {},
                    "x": 720,
                    "y": 1940
                },
                "34": {
                    "data": {
                        "advanced": {
                            "customName": "db_is_shost_exist",
                            "customNameId": 0,
                            "join": []
                        },
                        "conditions": [
                            {
                                "comparisons": [
                                    {
                                        "conditionIndex": 0,
                                        "op": "!=",
                                        "param": "filtered-data:FL_Host_Artifact:condition_1:artifact:*.cef.host_name",
                                        "value": ""
                                    }
                                ],
                                "conditionIndex": 0,
                                "display": "If",
                                "logic": "and",
                                "type": "if"
                            },
                            {
                                "comparisons": [
                                    {
                                        "conditionIndex": 1,
                                        "op": "==",
                                        "param": "",
                                        "value": ""
                                    }
                                ],
                                "conditionIndex": 1,
                                "display": "Else",
                                "logic": "and",
                                "type": "else"
                            }
                        ],
                        "functionId": 4,
                        "functionName": "db_is_shost_exist",
                        "id": "34",
                        "type": "decision"
                    },
                    "errors": {},
                    "id": "34",
                    "type": "decision",
                    "warnings": {},
                    "x": 600,
                    "y": 620
                },
                "35": {
                    "data": {
                        "advanced": {
                            "customName": "api_add_comment_shost_already_exist",
                            "customNameId": 0,
                            "join": []
                        },
                        "functionId": 2,
                        "functionName": "api_add_comment_shost_already_exist",
                        "id": "35",
                        "type": "utility",
                        "utilities": {
                            "comment": {
                                "description": "",
                                "fields": [
                                    {
                                        "description": "",
                                        "label": "comment",
                                        "name": "comment",
                                        "placeholder": "Enter a comment",
                                        "renderType": "datapath",
                                        "required": true
                                    },
                                    {
                                        "hidden": true,
                                        "name": "container",
                                        "required": false
                                    },
                                    {
                                        "hidden": true,
                                        "name": "author",
                                        "required": false
                                    },
                                    {
                                        "hidden": true,
                                        "name": "trace",
                                        "required": false
                                    }
                                ],
                                "label": "add comment",
                                "name": "comment"
                            }
                        },
                        "values": {
                            "comment": {
                                "_internal": [
                                    "container",
                                    "author",
                                    "trace"
                                ],
                                "comment": "host_name already exist in the container. No need to extract again."
                            }
                        }
                    },
                    "errors": {},
                    "id": "35",
                    "tab": "apis",
                    "type": "utility",
                    "warnings": {},
                    "x": 980,
                    "y": 2160
                },
                "36": {
                    "data": {
                        "action": "execute program",
                        "actionType": "generic",
                        "advanced": {
                            "customName": "nslookup_find_shost_mbs",
                            "customNameId": 0,
                            "join": []
                        },
                        "connector": "SSH",
                        "connectorConfigs": [
                            "mbs_ssh"
                        ],
                        "connectorId": "d37aa7fe-c973-44ee-a164-2ca5bf321b1f",
                        "connectorVersion": "v1",
                        "functionId": 1,
                        "functionName": "nslookup_find_shost_mbs",
                        "id": "36",
                        "parameters": {
                            "command": "fb_nslookup_format_query:formatted_data.*",
                            "ip_hostname": "sbphanappprd01.marinabaysands.com",
                            "script_file": "",
                            "timeout": ""
                        },
                        "requiredParameters": [
                            {
                                "data_type": "string",
                                "field": "ip_hostname"
                            }
                        ],
                        "type": "action"
                    },
                    "errors": {},
                    "id": "36",
                    "type": "action",
                    "warnings": {},
                    "x": 720,
                    "y": 1540
                },
                "37": {
                    "data": {
                        "advanced": {
                            "customName": "cf_mbs_extract_regex_from_list_2",
                            "customNameId": 0,
                            "join": []
                        },
                        "customFunction": {
                            "draftMode": false,
                            "name": "extract_regex_from_list",
                            "repoName": "mbs"
                        },
                        "functionId": 2,
                        "functionName": "cf_mbs_extract_regex_from_list_2",
                        "id": "37",
                        "type": "utility",
                        "utilities": {
                            "extract_regex_from_list": {
                                "description": "Extract regex patterns from input list and pass them as an output list. The output of this custom function would be a list of strings.",
                                "fields": [
                                    {
                                        "dataTypes": [
                                            "*"
                                        ],
                                        "description": "",
                                        "inputType": "list",
                                        "label": "input_list",
                                        "name": "input_list",
                                        "placeholder": "requestURL, sourceAddress etc.",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "dataTypes": [
                                            "*"
                                        ],
                                        "description": "",
                                        "inputType": "item",
                                        "label": "regex_pattern",
                                        "name": "regex_pattern",
                                        "placeholder": "regex pattern as a string",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "dataTypes": [
                                            "*"
                                        ],
                                        "description": "0=drop input artifact if a regex match was not found for that artifact.\n1=Pass the input IOC in the output if a regex match was not found.\n\nAn artifact will be dropped from passing on as output if this field is left empty and there is no regex match found.",
                                        "inputType": "item",
                                        "label": "drop_or_pass_input_ioc",
                                        "name": "drop_or_pass_input_ioc",
                                        "placeholder": "0/1",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "dataTypes": [],
                                        "description": "This will work only if the input list has one item in it. Default = false",
                                        "inputType": "item",
                                        "label": "output_as_string",
                                        "name": "output_as_string",
                                        "placeholder": "true/false",
                                        "renderType": "datapath",
                                        "required": false
                                    }
                                ],
                                "label": "extract_regex_from_list",
                                "name": "extract_regex_from_list"
                            }
                        },
                        "utilityType": "custom_function",
                        "values": {
                            "extract_regex_from_list": {
                                "drop_or_pass_input_ioc": null,
                                "input_list": "sppl_query_find_shost:action_result.data.*._raw",
                                "output_as_string": "true",
                                "regex_pattern": "Hostname: (.+)\\s"
                            }
                        }
                    },
                    "errors": {},
                    "id": "37",
                    "tab": "customFunctions",
                    "type": "utility",
                    "userCode": "    # Write your custom code here...",
                    "warnings": {},
                    "x": 380,
                    "y": 1360
                },
                "38": {
                    "data": {
                        "advanced": {
                            "customName": "cf_mbs_extract_regex_from_list_1",
                            "customNameId": 0,
                            "join": []
                        },
                        "customFunction": {
                            "draftMode": false,
                            "name": "extract_regex_from_list",
                            "repoName": "mbs"
                        },
                        "functionId": 1,
                        "functionName": "cf_mbs_extract_regex_from_list_1",
                        "id": "38",
                        "type": "utility",
                        "utilities": {
                            "extract_regex_from_list": {
                                "description": "Extract regex patterns from input list and pass them as an output list. The output of this custom function would be a list of strings.",
                                "fields": [
                                    {
                                        "dataTypes": [
                                            "*"
                                        ],
                                        "description": "",
                                        "inputType": "list",
                                        "label": "input_list",
                                        "name": "input_list",
                                        "placeholder": "requestURL, sourceAddress etc.",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "dataTypes": [
                                            "*"
                                        ],
                                        "description": "",
                                        "inputType": "item",
                                        "label": "regex_pattern",
                                        "name": "regex_pattern",
                                        "placeholder": "regex pattern as a string",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "dataTypes": [
                                            "*"
                                        ],
                                        "description": "0=drop input artifact if a regex match was not found for that artifact.\n1=Pass the input IOC in the output if a regex match was not found.\n\nAn artifact will be dropped from passing on as output if this field is left empty and there is no regex match found.",
                                        "inputType": "item",
                                        "label": "drop_or_pass_input_ioc",
                                        "name": "drop_or_pass_input_ioc",
                                        "placeholder": "0/1",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "dataTypes": [],
                                        "description": "This will work only if the input list has one item in it. Default = false",
                                        "inputType": "item",
                                        "label": "output_as_string",
                                        "name": "output_as_string",
                                        "placeholder": "true/false",
                                        "renderType": "datapath",
                                        "required": false
                                    }
                                ],
                                "label": "extract_regex_from_list",
                                "name": "extract_regex_from_list"
                            }
                        },
                        "utilityType": "custom_function",
                        "values": {
                            "extract_regex_from_list": {
                                "drop_or_pass_input_ioc": null,
                                "input_list": "nslookup_find_shost_mbs:action_result.data.*.output",
                                "output_as_string": "true",
                                "regex_pattern": "name = (.+)."
                            }
                        }
                    },
                    "errors": {},
                    "id": "38",
                    "tab": "customFunctions",
                    "type": "utility",
                    "userCode": "    # Write your custom code here...",
                    "warnings": {},
                    "x": 720,
                    "y": 1720
                },
                "39": {
                    "data": {
                        "advanced": {
                            "join": [],
                            "separator": ", "
                        },
                        "functionId": 10,
                        "functionName": "format_10",
                        "id": "39",
                        "parameters": [
                            "container:id"
                        ],
                        "template": "{{\"host_type\": \"server\"}}",
                        "type": "format"
                    },
                    "errors": {},
                    "id": "39",
                    "type": "format",
                    "warnings": {},
                    "x": 1660,
                    "y": 820
                },
                "4": {
                    "data": {
                        "advanced": {
                            "customName": "db_is_client_ip_exist",
                            "customNameId": 0,
                            "join": [],
                            "note": "Blue=Client IP exists in DNS/Proxy IP LIST\nPurple=Client IP is not null\nYellow=Else"
                        },
                        "conditions": [
                            {
                                "comparisons": [
                                    {
                                        "conditionIndex": 0,
                                        "op": "in",
                                        "param": "artifact:*.cef.sourceAddress",
                                        "value": "custom_list:DNS IP List"
                                    },
                                    {
                                        "conditionIndex": 0,
                                        "op": "in",
                                        "param": "artifact:*.cef.sourceAddress",
                                        "value": "custom_list:Proxy IP List"
                                    }
                                ],
                                "conditionIndex": 0,
                                "display": "If",
                                "logic": "or",
                                "type": "if"
                            },
                            {
                                "comparisons": [
                                    {
                                        "conditionIndex": 1,
                                        "op": "!=",
                                        "param": "artifact:*.cef.sourceAddress",
                                        "value": ""
                                    },
                                    {
                                        "conditionIndex": 1,
                                        "op": "in",
                                        "param": "client_ip",
                                        "value": "artifact:*.tags"
                                    }
                                ],
                                "conditionIndex": 1,
                                "display": "Else If",
                                "logic": "and",
                                "type": "elif"
                            },
                            {
                                "comparisons": [
                                    {
                                        "conditionIndex": 2,
                                        "op": "==",
                                        "param": "",
                                        "value": ""
                                    }
                                ],
                                "conditionIndex": 2,
                                "display": "Else",
                                "logic": "and",
                                "type": "else"
                            }
                        ],
                        "functionId": 3,
                        "functionName": "db_is_client_ip_exist",
                        "id": "4",
                        "type": "decision"
                    },
                    "errors": {},
                    "id": "4",
                    "type": "decision",
                    "warnings": {},
                    "x": 740,
                    "y": 120
                },
                "5": {
                    "data": {
                        "advanced": {
                            "customName": "fl_client_ip",
                            "customNameId": 0,
                            "join": []
                        },
                        "conditions": [
                            {
                                "comparisons": [
                                    {
                                        "conditionIndex": 0,
                                        "op": "!=",
                                        "param": "artifact:*.cef.sourceAddress",
                                        "value": ""
                                    },
                                    {
                                        "conditionIndex": 0,
                                        "op": "==",
                                        "param": "added_from_playbook",
                                        "value": "artifact:*.label"
                                    }
                                ],
                                "conditionIndex": 0,
                                "logic": "and"
                            }
                        ],
                        "functionId": 6,
                        "functionName": "fl_client_ip",
                        "id": "5",
                        "type": "filter"
                    },
                    "errors": {},
                    "id": "5",
                    "type": "filter",
                    "warnings": {},
                    "x": 120,
                    "y": 320
                },
                "6": {
                    "data": {
                        "advanced": {
                            "case_sensitive": true,
                            "join": [],
                            "scope": "all"
                        },
                        "conditions": [
                            {
                                "comparisons": [
                                    {
                                        "conditionIndex": 0,
                                        "op": "in",
                                        "param": "Server",
                                        "value": "artifact:*.cef.host_os"
                                    },
                                    {
                                        "conditionIndex": 0,
                                        "op": "in",
                                        "param": "Linux",
                                        "value": "artifact:*.cef.host_os"
                                    }
                                ],
                                "conditionIndex": 0,
                                "display": "If",
                                "logic": "or",
                                "type": "if"
                            },
                            {
                                "comparisons": [
                                    {
                                        "conditionIndex": 1,
                                        "op": "!=",
                                        "param": "artifact:*.cef.host_os",
                                        "value": ""
                                    }
                                ],
                                "conditionIndex": 1,
                                "display": "Else If",
                                "logic": "and",
                                "type": "elif"
                            },
                            {
                                "comparisons": [
                                    {
                                        "conditionIndex": 2,
                                        "op": "==",
                                        "param": "",
                                        "value": ""
                                    }
                                ],
                                "conditionIndex": 2,
                                "display": "Else",
                                "logic": "and",
                                "type": "else"
                            }
                        ],
                        "functionId": 9,
                        "functionName": "decision_9",
                        "id": "6",
                        "type": "decision"
                    },
                    "errors": {},
                    "id": "6",
                    "type": "decision",
                    "warnings": {},
                    "x": 1640,
                    "y": 580
                },
                "7": {
                    "data": {
                        "advanced": {
                            "customName": "fl_host_artifact_2",
                            "customNameId": 0,
                            "join": []
                        },
                        "conditions": [
                            {
                                "comparisons": [
                                    {
                                        "conditionIndex": 0,
                                        "op": "==",
                                        "param": "artifact:*.name",
                                        "value": "Host Artifact"
                                    }
                                ],
                                "conditionIndex": 0,
                                "logic": "and"
                            }
                        ],
                        "functionId": 5,
                        "functionName": "fl_host_artifact_2",
                        "id": "7",
                        "type": "filter"
                    },
                    "errors": {},
                    "id": "7",
                    "type": "filter",
                    "warnings": {},
                    "x": 1620,
                    "y": 320
                },
                "8": {
                    "data": {
                        "advanced": {
                            "case_sensitive": true,
                            "join": [],
                            "notRequiredJoins": [
                                "update_artifact_4",
                                "update_artifact_3"
                            ],
                            "note": "Blue=MBS\nPurple=SCL\nYellow=CORP\nGreen=Else",
                            "scope": "all"
                        },
                        "conditions": [
                            {
                                "comparisons": [
                                    {
                                        "conditionIndex": 0,
                                        "op": "==",
                                        "param": "artifact:*.name",
                                        "value": "Event Details Artifact"
                                    },
                                    {
                                        "conditionIndex": 0,
                                        "op": "!=",
                                        "param": "artifact:*.cef.deviceAddress",
                                        "value": ""
                                    },
                                    {
                                        "conditionIndex": 0,
                                        "op": "in",
                                        "param": "artifact:*.cef.deviceAddress",
                                        "value": "custom_list:MBS FireEye Appliance IP List"
                                    }
                                ],
                                "conditionIndex": 0,
                                "display": "If",
                                "logic": "and",
                                "type": "if"
                            },
                            {
                                "comparisons": [
                                    {
                                        "conditionIndex": 1,
                                        "op": "==",
                                        "param": "artifact:*.name",
                                        "value": "Event Details Artifact"
                                    },
                                    {
                                        "conditionIndex": 1,
                                        "op": "!=",
                                        "param": "artifact:*.cef.deviceAddress",
                                        "value": ""
                                    },
                                    {
                                        "conditionIndex": 1,
                                        "op": "in",
                                        "param": "artifact:*.cef.deviceAddress",
                                        "value": "custom_list:SCL FireEye Appliance IP List"
                                    }
                                ],
                                "conditionIndex": 1,
                                "display": "Else If",
                                "logic": "and",
                                "type": "elif"
                            },
                            {
                                "comparisons": [
                                    {
                                        "conditionIndex": 2,
                                        "op": "==",
                                        "param": "artifact:*.name",
                                        "value": "Event Details Artifact"
                                    },
                                    {
                                        "conditionIndex": 2,
                                        "op": "!=",
                                        "param": "artifact:*.cef.deviceAddress",
                                        "value": ""
                                    },
                                    {
                                        "conditionIndex": 2,
                                        "op": "in",
                                        "param": "artifact:*.cef.deviceAddress",
                                        "value": "custom_list:CORP FireEye Appliance IP List"
                                    }
                                ],
                                "conditionIndex": 2,
                                "display": "Else If",
                                "logic": "and",
                                "type": "elif"
                            },
                            {
                                "comparisons": [
                                    {
                                        "conditionIndex": 3,
                                        "op": "==",
                                        "param": "",
                                        "value": ""
                                    }
                                ],
                                "conditionIndex": 3,
                                "display": "Else",
                                "logic": "and",
                                "type": "else"
                            }
                        ],
                        "functionId": 6,
                        "functionName": "decision_6",
                        "id": "8",
                        "type": "decision"
                    },
                    "errors": {},
                    "id": "8",
                    "type": "decision",
                    "warnings": {},
                    "x": 1740,
                    "y": 1180
                },
                "9": {
                    "data": {
                        "action": "update artifact",
                        "actionType": "generic",
                        "advanced": {
                            "join": [],
                            "scope": "all"
                        },
                        "connector": "Phantom",
                        "connectorConfigs": [
                            "phantom"
                        ],
                        "connectorId": "deb82aa9-22cc-4675-9cf1-534b8d006eb7",
                        "connectorVersion": "v1",
                        "functionId": 2,
                        "functionName": "update_artifact_2",
                        "id": "9",
                        "parameters": {
                            "artifact_id": "filtered-data:FL_Host_Artifact:condition_1:artifact:*.id",
                            "artifact_json": "",
                            "cef_json": "format_5:formatted_data",
                            "cef_types_json": "",
                            "label": "",
                            "name": "",
                            "overwrite": "",
                            "severity": "",
                            "tags": ""
                        },
                        "requiredParameters": [
                            {
                                "data_type": "string",
                                "field": "artifact_id"
                            }
                        ],
                        "type": "action"
                    },
                    "errors": {},
                    "id": "9",
                    "type": "action",
                    "warnings": {},
                    "x": 720,
                    "y": 2160
                }
            },
            "notes": "Ingest additional data into the container."
        },
        "input_spec": null,
        "output_spec": null,
        "playbook_type": "automation",
        "python_version": "3",
        "schema": "5.0.10",
        "version": "6.1.1.211"
    },
    "create_time": "2023-12-05T03:06:23.918332+00:00",
    "draft_mode": false,
    "labels": [
        "*"
    ],
    "tags": []
}