"""
This playbook investigates the URLs present in the email against various tools such as the below and stores the results in the container.\n\n- VirusTotal v3\n- Crowdstrike\n- IntSights
"""


import phantom.rules as phantom
import json
from datetime import datetime, timedelta


@phantom.playbook_block()
def on_start(container):
    phantom.debug('on_start() called')

    # call 'fl_non_empty_urls' block
    fl_non_empty_urls(container=container)

    return

@phantom.playbook_block()
def fl_insights_success_results(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):
    phantom.debug("fl_insights_success_results() called")

    # collect filtered artifact ids and results for 'if' condition 1
    matched_artifacts_1, matched_results_1 = phantom.condition(
        container=container,
        conditions=[
            ["intsights_hunt_url_backup:action_result.status", "==", "success"]
        ],
        name="fl_insights_success_results:condition_1",
        scope="all",
        case_sensitive=True,
        delimiter=None)

    # call connected blocks if filtered artifacts or results
    if matched_artifacts_1 or matched_results_1:
        fb_update_artifact_intsights_url_results(action=action, success=success, container=container, results=results, handle=handle, filtered_artifacts=matched_artifacts_1, filtered_results=matched_results_1)

    return


@phantom.playbook_block()
def fl_non_empty_urls(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):
    phantom.debug("fl_non_empty_urls() called")

    ################################################################################
    # Filter non empty requestURLs
    ################################################################################

    # collect filtered artifact ids and results for 'if' condition 1
    matched_artifacts_1, matched_results_1 = phantom.condition(
        container=container,
        logical_operator="and",
        conditions=[
            ["artifact:*.cef.requestURL", "!=", ""],
            ["whitelisted_domain", "not in", "artifact:*.tags"],
            ["previously_processed", "not in", "artifact:*.tags"],
            ["added_from_playbook", "==", "artifact:*.label"]
        ],
        name="fl_non_empty_urls:condition_1",
        scope="all",
        case_sensitive=True,
        delimiter=None)

    # call connected blocks if filtered artifacts or results
    if matched_artifacts_1 or matched_results_1:
        vt_url_reputation(action=action, success=success, container=container, results=results, handle=handle, filtered_artifacts=matched_artifacts_1, filtered_results=matched_results_1)
        fb_cs_query(action=action, success=success, container=container, results=results, handle=handle, filtered_artifacts=matched_artifacts_1, filtered_results=matched_results_1)
        intsights_hunt_url(action=action, success=success, container=container, results=results, handle=handle, filtered_artifacts=matched_artifacts_1, filtered_results=matched_results_1)

    return


@phantom.playbook_block()
def fb_note_intsights_hunt_url(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):
    phantom.debug("fb_note_intsights_hunt_url() called")

    template = """%%\nURL : {0}\nSeverity Value: {1}\nStatus: {2}\nMessage: {3}\n\n%%"""

    # parameter list for template variable replacement
    parameters = [
        "intsights_hunt_url_backup:action_result.data.*.Value",
        "intsights_hunt_url_backup:action_result.data.*.Severity.Value",
        "intsights_hunt_url_backup:action_result.status",
        "intsights_hunt_url_backup:action_result.message"
    ]

    ################################################################################
    ## Custom Code Start
    ################################################################################

    # Write your custom code here...

    ################################################################################
    ## Custom Code End
    ################################################################################

    phantom.format(container=container, template=template, parameters=parameters, name="fb_note_intsights_hunt_url", separator=", ", drop_none=True)

    api_note_intsights_hunt_url(container=container)

    return


@phantom.playbook_block()
def fb_note_vt_reputation_url(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):
    phantom.debug("fb_note_vt_reputation_url() called")

    template = """%%\nURL : {0}\nMalicious Score: {1}\nStatus: {2}\nMessage: {3}\n\n%%"""

    # parameter list for template variable replacement
    parameters = [
        "vt_url_reputation:action_result.parameter.url",
        "vt_url_reputation:action_result.summary.malicious",
        "vt_url_reputation:action_result.status",
        "vt_url_reputation:action_result.message"
    ]

    ################################################################################
    ## Custom Code Start
    ################################################################################

    # Write your custom code here...

    ################################################################################
    ## Custom Code End
    ################################################################################

    phantom.format(container=container, template=template, parameters=parameters, name="fb_note_vt_reputation_url", separator=", ")

    api_note_vt_reputation_url(container=container)

    return


@phantom.playbook_block()
def api_note_intsights_hunt_url(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):
    phantom.debug("api_note_intsights_hunt_url() called")

    fb_note_intsights_hunt_url = phantom.get_format_data(name="fb_note_intsights_hunt_url")

    ################################################################################
    ## Custom Code Start
    ################################################################################

    # Write your custom code here...

    ################################################################################
    ## Custom Code End
    ################################################################################

    phantom.add_note(container=container, content=fb_note_intsights_hunt_url, note_format="html", title="INTSIGHTS Hunt URL Results")

    fl_insights_success_results(container=container)

    return


@phantom.playbook_block()
def ph_update_artifact_vt_malicious_tag(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):
    phantom.debug("ph_update_artifact_vt_malicious_tag() called")

    # phantom.debug('Action: {0} {1}'.format(action['name'], ('SUCCEEDED' if success else 'FAILED')))

    filtered_result_0_data_fl_malicious_vt_urls = phantom.collect2(container=container, datapath=["filtered-data:FL_Malicious_VT_URLs:condition_1:vt_url_reputation:action_result.parameter.context.artifact_id"])

    parameters = []

    # build parameters list for 'ph_update_artifact_vt_malicious_tag' call
    for filtered_result_0_item_fl_malicious_vt_urls in filtered_result_0_data_fl_malicious_vt_urls:
        if filtered_result_0_item_fl_malicious_vt_urls[0] is not None:
            parameters.append({
                "add_tags": "malicious",
                "artifact_id": filtered_result_0_item_fl_malicious_vt_urls[0],
                "remove_tags": "",
            })

    ################################################################################
    ## Custom Code Start
    ################################################################################

    # Write your custom code here...

    ################################################################################
    ## Custom Code End
    ################################################################################

    phantom.act("update artifact tags", parameters=parameters, name="ph_update_artifact_vt_malicious_tag", assets=["phantom"])

    return


@phantom.playbook_block()
def fl_malicious_vt_urls(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):
    phantom.debug("fl_malicious_vt_urls() called")

    # collect filtered artifact ids and results for 'if' condition 1
    matched_artifacts_1, matched_results_1 = phantom.condition(
        container=container,
        conditions=[
            ["vt_url_reputation:action_result.summary.malicious", ">=", 1]
        ],
        name="fl_malicious_vt_urls:condition_1",
        delimiter=None)

    # call connected blocks if filtered artifacts or results
    if matched_artifacts_1 or matched_results_1:
        ph_update_artifact_vt_malicious_tag(action=action, success=success, container=container, results=results, handle=handle, filtered_artifacts=matched_artifacts_1, filtered_results=matched_results_1)

    return


@phantom.playbook_block()
def cf_update_artifact_vt_url(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):
    phantom.debug("cf_update_artifact_vt_url() called")

    vt_url_reputation_result_data = phantom.collect2(container=container, datapath=["vt_url_reputation:action_result.parameter.context.artifact_id","vt_url_reputation:action_result.parameter.context.artifact_id"], action_results=results)
    fb_update_artifact_vt_url_results = phantom.get_format_data(name="fb_update_artifact_vt_url_results")

    vt_url_reputation_parameter_context_artifact_id = [item[0] for item in vt_url_reputation_result_data]

    parameters = []

    parameters.append({
        "artifact_id_list": vt_url_reputation_parameter_context_artifact_id,
        "new_cef_json_list": fb_update_artifact_vt_url_results,
    })

    ################################################################################
    ## Custom Code Start
    ################################################################################
    # Write your custom code here...
    ################################################################################
    ## Custom Code End
    ################################################################################

    phantom.custom_function(custom_function="mbs/update_artifact", parameters=parameters, name="cf_update_artifact_vt_url", callback=fl_malicious_vt_urls)

    return


@phantom.playbook_block()
def fb_update_artifact_vt_url_results(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):
    phantom.debug("fb_update_artifact_vt_url_results() called")

    template = """%%\n{{\"vt_result\": \"{0}\"}}\n%%"""

    # parameter list for template variable replacement
    parameters = [
        "vt_url_reputation:action_result.summary.malicious"
    ]

    ################################################################################
    ## Custom Code Start
    ################################################################################

    # Write your custom code here...

    ################################################################################
    ## Custom Code End
    ################################################################################

    phantom.format(container=container, template=template, parameters=parameters, name="fb_update_artifact_vt_url_results", separator=", ")

    cf_update_artifact_vt_url(container=container)

    return


@phantom.playbook_block()
def http_cs_url_query(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):
    phantom.debug("http_cs_url_query() called")

    # phantom.debug('Action: {0} {1}'.format(action['name'], ('SUCCEEDED' if success else 'FAILED')))

    fb_cs_query__as_list = phantom.get_format_data(name="fb_cs_query__as_list")
    fb_cs_query = phantom.get_format_data(name="fb_cs_query")

    parameters = []

    # build parameters list for 'http_cs_url_query' call
    for fb_cs_query__item in fb_cs_query__as_list:
        if fb_cs_query is not None:
            parameters.append({
                "query": fb_cs_query__item,
                "command": "search",
                "display": "",
                "headers": "",
                "location": fb_cs_query,
                "parse_only": "",
                "verify_certificate": False,
            })

    ################################################################################
    ## Custom Code Start
    ################################################################################

    # Write your custom code here...

    ################################################################################
    ## Custom Code End
    ################################################################################

    phantom.act("get data", parameters=parameters, name="http_cs_url_query", assets=["crowdstrike http"], callback=db_at_least_one_event_returned)

    return


@phantom.playbook_block()
def fb_cs_query(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):
    phantom.debug("fb_cs_query() called")

    template = """intel/combined/indicators/v1?q={0}"""

    # parameter list for template variable replacement
    parameters = [
        "filtered-data:FL_Non_Empty_URLs:condition_1:artifact:*.cef.requestURL"
    ]

    ################################################################################
    ## Custom Code Start
    ################################################################################

    # Write your custom code here...

    ################################################################################
    ## Custom Code End
    ################################################################################

    phantom.format(container=container, template=template, parameters=parameters, name="fb_cs_query", separator=", ")

    http_cs_url_query(container=container)

    return


@phantom.playbook_block()
def api_note_cs_hunt_url(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):
    phantom.debug("api_note_cs_hunt_url() called")

    ################################################################################
    # Add a note to the container with the URL investigation results.
    ################################################################################

    fb_note_cs_hunt_url = phantom.get_format_data(name="fb_note_cs_hunt_url")

    ################################################################################
    ## Custom Code Start
    ################################################################################

    # Write your custom code here...

    ################################################################################
    ## Custom Code End
    ################################################################################

    phantom.add_note(container=container, content=fb_note_cs_hunt_url, note_format="html", title="Crowdstrike URL Investigation Results")

    return


@phantom.playbook_block()
def api_note_cs_hunt_url_no_data(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):
    phantom.debug("api_note_cs_hunt_url_no_data() called")

    fb_note_cs_hunt_url_no_data = phantom.get_format_data(name="fb_note_cs_hunt_url_no_data")

    ################################################################################
    ## Custom Code Start
    ################################################################################

    # Write your custom code here...

    ################################################################################
    ## Custom Code End
    ################################################################################

    phantom.add_note(container=container, content=fb_note_cs_hunt_url_no_data, note_format="html", title="Crowdstrike URL Investigation Results")

    return


@phantom.playbook_block()
def db_at_least_one_event_returned(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):
    phantom.debug("db_at_least_one_event_returned() called")

    # check for 'if' condition 1
    found_match_1 = phantom.decision(
        container=container,
        conditions=[
            ["http_cs_url_query:action_result.data.*.response_body.meta.pagination.total", ">", 0]
        ],
        delimiter=None)

    # call connected blocks if condition 1 matched
    if found_match_1:
        fb_note_cs_hunt_url(action=action, success=success, container=container, results=results, handle=handle)
        return

    # check for 'else' condition 2
    fb_note_cs_hunt_url_no_data(action=action, success=success, container=container, results=results, handle=handle)

    return


@phantom.playbook_block()
def fb_update_artifact_intsights_url_results(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):
    phantom.debug("fb_update_artifact_intsights_url_results() called")

    template = """%%\n{{\"intsight_severity\": \"{0}\"}}\n%%"""

    # parameter list for template variable replacement
    parameters = [
        "filtered-data:fl_insights_success_results:condition_1:intsights_hunt_url_backup:action_result.data.*.Severity.Value"
    ]

    ################################################################################
    ## Custom Code Start
    ################################################################################

    # Write your custom code here...

    ################################################################################
    ## Custom Code End
    ################################################################################

    phantom.format(container=container, template=template, parameters=parameters, name="fb_update_artifact_intsights_url_results", separator=", ")

    cf_update_artifact_intsights_url(container=container)

    return


@phantom.playbook_block()
def cf_update_artifact_intsights_url(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):
    phantom.debug("cf_update_artifact_intsights_url() called")

    filtered_result_0_data_fl_insights_success_results = phantom.collect2(container=container, datapath=["filtered-data:fl_insights_success_results:condition_1:intsights_hunt_url_backup:action_result.parameter.context.artifact_id"])
    fb_update_artifact_intsights_url_results = phantom.get_format_data(name="fb_update_artifact_intsights_url_results")

    filtered_result_0_parameter_context_artifact_id = [item[0] for item in filtered_result_0_data_fl_insights_success_results]

    parameters = []

    parameters.append({
        "artifact_id_list": filtered_result_0_parameter_context_artifact_id,
        "new_cef_json_list": fb_update_artifact_intsights_url_results,
    })

    ################################################################################
    ## Custom Code Start
    ################################################################################
    # Write your custom code here...
    ################################################################################
    ## Custom Code End
    ################################################################################

    phantom.custom_function(custom_function="mbs/update_artifact", parameters=parameters, name="cf_update_artifact_intsights_url", callback=fl_malicious_intsights_urls)

    return


@phantom.playbook_block()
def ph_update_artifact_int_malicious_tag(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):
    phantom.debug("ph_update_artifact_int_malicious_tag() called")

    # phantom.debug('Action: {0} {1}'.format(action['name'], ('SUCCEEDED' if success else 'FAILED')))

    filtered_result_0_data_fl_malicious_intsights_urls = phantom.collect2(container=container, datapath=["filtered-data:FL_Malicious_INTSIGHTS_URLs:condition_1:intsights_hunt_url_backup:action_result.parameter.context.artifact_id"])

    parameters = []

    # build parameters list for 'ph_update_artifact_int_malicious_tag' call
    for filtered_result_0_item_fl_malicious_intsights_urls in filtered_result_0_data_fl_malicious_intsights_urls:
        if filtered_result_0_item_fl_malicious_intsights_urls[0] is not None:
            parameters.append({
                "add_tags": "malicious",
                "artifact_id": filtered_result_0_item_fl_malicious_intsights_urls[0],
                "remove_tags": "",
            })

    ################################################################################
    ## Custom Code Start
    ################################################################################

    # Write your custom code here...

    ################################################################################
    ## Custom Code End
    ################################################################################

    phantom.act("update artifact tags", parameters=parameters, name="ph_update_artifact_int_malicious_tag", assets=["phantom"])

    return


@phantom.playbook_block()
def api_note_vt_reputation_url(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):
    phantom.debug("api_note_vt_reputation_url() called")

    fb_note_vt_reputation_url = phantom.get_format_data(name="fb_note_vt_reputation_url")

    ################################################################################
    ## Custom Code Start
    ################################################################################

    # Write your custom code here...

    ################################################################################
    ## Custom Code End
    ################################################################################

    phantom.add_note(container=container, content=fb_note_vt_reputation_url, note_format="html", title="VT URL Reputation Results")

    fb_update_artifact_vt_url_results(container=container)

    return


@phantom.playbook_block()
def vt_url_reputation(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):
    phantom.debug("vt_url_reputation() called")

    # phantom.debug('Action: {0} {1}'.format(action['name'], ('SUCCEEDED' if success else 'FAILED')))

    ################################################################################
    # Check URL reputation against Virus Total.
    ################################################################################

    filtered_artifact_0_data_fl_non_empty_urls = phantom.collect2(container=container, datapath=["filtered-data:FL_Non_Empty_URLs:condition_1:artifact:*.cef.requestURL","filtered-data:FL_Non_Empty_URLs:condition_1:artifact:*.cef.sourceDnsDomain","filtered-data:fl_non_empty_urls:condition_1:artifact:*.id"])

    parameters = []

    # build parameters list for 'vt_url_reputation' call
    for filtered_artifact_0_item_fl_non_empty_urls in filtered_artifact_0_data_fl_non_empty_urls:
        if filtered_artifact_0_item_fl_non_empty_urls[0] is not None:
            parameters.append({
                "url": filtered_artifact_0_item_fl_non_empty_urls[0],
                "domain": filtered_artifact_0_item_fl_non_empty_urls[1],
                "context": {'artifact_id': filtered_artifact_0_item_fl_non_empty_urls[2]},
            })

    ################################################################################
    ## Custom Code Start
    ################################################################################

    # Write your custom code here...

    ################################################################################
    ## Custom Code End
    ################################################################################

    phantom.act("url reputation", parameters=parameters, name="vt_url_reputation", assets=["virustotal prod v3"], callback=fb_note_vt_reputation_url)

    return


@phantom.playbook_block()
def fl_malicious_intsights_urls(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):
    phantom.debug("fl_malicious_intsights_urls() called")

    # collect filtered artifact ids and results for 'if' condition 1
    matched_artifacts_1, matched_results_1 = phantom.condition(
        container=container,
        conditions=[
            ["intsights_hunt_url_backup:action_result.data.*.Severity.Value", "==", "High"]
        ],
        name="fl_malicious_intsights_urls:condition_1",
        scope="all",
        case_sensitive=True,
        delimiter=None)

    # call connected blocks if filtered artifacts or results
    if matched_artifacts_1 or matched_results_1:
        ph_update_artifact_int_malicious_tag(action=action, success=success, container=container, results=results, handle=handle, filtered_artifacts=matched_artifacts_1, filtered_results=matched_results_1)

    return


@phantom.playbook_block()
def fb_note_cs_hunt_url_no_data(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):
    phantom.debug("fb_note_cs_hunt_url_no_data() called")

    template = """No CrowdStrike data has been found for the below URL(s)\n\n%%\n {0}\n%%"""

    # parameter list for template variable replacement
    parameters = [
        "filtered-data:FL_Non_Empty_URLs:condition_1:artifact:*.cef.requestURL"
    ]

    ################################################################################
    ## Custom Code Start
    ################################################################################

    # Write your custom code here...

    ################################################################################
    ## Custom Code End
    ################################################################################

    phantom.format(container=container, template=template, parameters=parameters, name="fb_note_cs_hunt_url_no_data", separator=", ")

    api_note_cs_hunt_url_no_data(container=container)

    return


@phantom.playbook_block()
def fb_note_cs_hunt_url(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):
    phantom.debug("fb_note_cs_hunt_url() called")

    template = """URL investigation Results as below.\n\n%%\nIndicator: {0}\nMalicious Confidence: {1}\nMalware Families: {2}\nThreat Types: {3}\n\n%%"""

    # parameter list for template variable replacement
    parameters = [
        "http_cs_url_query:action_result.data.*.response_body.resources.*.indicator",
        "http_cs_url_query:action_result.data.*.response_body.resources.*.malicious_confidence",
        "http_cs_url_query:action_result.data.*.response_body.resources.*.malware_families",
        "http_cs_url_query:action_result.data.*.response_body.resources.*.threat_types"
    ]

    ################################################################################
    ## Custom Code Start
    ################################################################################

    # Write your custom code here...

    ################################################################################
    ## Custom Code End
    ################################################################################

    phantom.format(container=container, template=template, parameters=parameters, name="fb_note_cs_hunt_url", separator=", ")

    api_note_cs_hunt_url(container=container)

    return


@phantom.playbook_block()
def intsights_hunt_url(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):
    phantom.debug("intsights_hunt_url() called")

    # phantom.debug('Action: {0} {1}'.format(action['name'], ('SUCCEEDED' if success else 'FAILED')))

    ################################################################################
    # Hunt URL against INTSIGHTS.
    ################################################################################

    filtered_artifact_0_data_fl_non_empty_urls = phantom.collect2(container=container, datapath=["filtered-data:fl_non_empty_urls:condition_1:artifact:*.cef.requestURL","filtered-data:fl_non_empty_urls:condition_1:artifact:*.id"])

    parameters = []

    # build parameters list for 'intsights_hunt_url' call
    for filtered_artifact_0_item_fl_non_empty_urls in filtered_artifact_0_data_fl_non_empty_urls:
        if filtered_artifact_0_item_fl_non_empty_urls[0] is not None:
            parameters.append({
                "url": filtered_artifact_0_item_fl_non_empty_urls[0],
                "context": {'artifact_id': filtered_artifact_0_item_fl_non_empty_urls[1]},
            })

    ################################################################################
    ## Custom Code Start
    ################################################################################

    # Write your custom code here...

    ################################################################################
    ## Custom Code End
    ################################################################################

    phantom.act("hunt url", parameters=parameters, name="intsights_hunt_url", assets=["intsights prod"], callback=fb_note_intsights_hunt_url)

    return


@phantom.playbook_block()
def on_finish(container, summary):
    phantom.debug("on_finish() called")

    ################################################################################
    ## Custom Code Start
    ################################################################################

    # Write your custom code here...

    ################################################################################
    ## Custom Code End
    ################################################################################

    return